{"version":3,"file":"js/app.a3b5c79f.js","mappings":"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","sources":["webpack://robot_comm_model/./src/components/Home.vue","webpack://robot_comm_model/./src/components/Home.vue?08c6","webpack://robot_comm_model/./src/components/Convoy_Seven.vue","webpack://robot_comm_model/./src/PosData.js","webpack://robot_comm_model/./src/components/Convoy_Seven.vue?9406","webpack://robot_comm_model/./src/components/Bumblebee.vue","webpack://robot_comm_model/./src/components/Bumblebee.vue?9fae","webpack://robot_comm_model/./src/components/SteelCable.vue","webpack://robot_comm_model/./src/PosDataGh.js","webpack://robot_comm_model/./src/components/SteelCable.vue?3eb8","webpack://robot_comm_model/./src/components/Bluetooth.vue","webpack://robot_comm_model/./src/components/Bluetooth.vue?222a","webpack://robot_comm_model/./src/router.js","webpack://robot_comm_model/./src/App.vue","webpack://robot_comm_model/./src/App.vue?7ccd","webpack://robot_comm_model/./src/main.js","webpack://robot_comm_model/webpack/bootstrap","webpack://robot_comm_model/webpack/runtime/chunk loaded","webpack://robot_comm_model/webpack/runtime/compat get default export","webpack://robot_comm_model/webpack/runtime/define property getters","webpack://robot_comm_model/webpack/runtime/global","webpack://robot_comm_model/webpack/runtime/hasOwnProperty shorthand","webpack://robot_comm_model/webpack/runtime/make namespace object","webpack://robot_comm_model/webpack/runtime/jsonp chunk loading","webpack://robot_comm_model/webpack/startup"],"sourcesContent":["<template>\r\n   <div>\r\n      <h3>机器人通信Dome(通信方式不要按照我这种来，最好采用通讯池的方式，接收和发送都在通讯池中处理)</h3>\r\n      <p>通讯格式为:帧头、数据长度、指令、数据、校验位 </p>\r\n      <el-button  type=\"primary\" v-on:click=\"GO_Convoy_Seven()\">变七</el-button>\r\n      <el-button type=\"primary\" v-on:click=\"GO_Bumblebee()\">大黄蜂</el-button>\r\n      <el-button type=\"primary\" v-on:click=\"GO_SteelCable()\">钢索</el-button>\r\n   </div>\r\n</template>\r\n<script>\r\n//import { TextEncoder } from 'text-encoding';\r\n import iconv from 'iconv-lite';\r\n  export default{\r\n    data(){\r\n\r\n      return{\r\n        msg:\"aaa\",\r\n         ports:[]\r\n      }\r\n    },\r\n    methods:{\r\n      async requestSerialPort(){\r\n        try{\r\n          //\r\n            const port = await navigator.serial.requestPort();\r\n            console.log(port);\r\n    \r\n        }\r\n        catch(err)\r\n        {\r\n           console.error(err);\r\n        }\r\n  \r\n      },\r\n      async getSerialPorts(){\r\n        try{\r\n  \r\n          this.ports = await navigator.serial.getPorts();\r\n          console.log(this.ports);\r\n       \r\n        }\r\n        catch(err){console.error(err);}\r\n      },\r\n      GO_Convoy_Seven(){\r\n        this.$router.replace('/Convoy_Seven');\r\n      },\r\n      GO_Bumblebee(){\r\n        this.$router.replace('/Bumblebee');\r\n      },\r\n      async GO_SteelCable()\r\n      {\r\n         this.$router.replace('/SteelCable');\r\n        //const device = await navigator.usb.requestDevice({filters:[{}]});\r\n        //console.log(device);\r\n      },\r\n      async f(){\r\n        \r\n            //测试延迟功能\r\n\r\n             // console.log(0)\r\n             //     let promise = new Promise((resolve, reject) => {\r\n             //       setTimeout(() => resolve(), 50)\r\n             //     });\r\n             // let result = await promise;\r\n             //console.log(new  Uint8Array(\"aaaa\"));\r\n             //console.log(1)\r\n          //var a = new TextEncoder('gb2312');\r\n         // console.log( Array.from(a.encode(\"测试发生的的父亲为人妇\")))\r\n          //console.log(Array.from(iconv.encode('测试发生的的父亲为人妇',\"gb2312\")))\r\n          // var nameByte = Array.from(iconv.encode('VolleyAction/2.sh','gb2312'));\r\n          // console.log(nameByte)\r\n          // var data          \r\n          // =[255,255,3,26,50,79,255,255,6,26,200,206,206,241,117,255,255,\r\n          // 6,26,180,171,198,230,43,255,255,6,26,177,163,187,164,211,255,\r\n          // 255,6,26,193,166,193,191,7,255,255,6,26,188,211,211,205,79,\r\n          // 255,255,6,26,205,197,182,211,59,255,255,8,26,180,243,187,198,\r\n          // 183,228,229,255,255,6,26,202,167,176,220,29,255,255,6,26,213,\r\n          // 247,179,204,107,255,255,6,26,177,168,184,230,23,255,255,6,26,\r\n          // 197,243,211,209,124,255,255,6,26,187,217,187,181,36,255,255,\r\n          // 10,26,211,192,178,187,183,197,198,250,96,255,255,6,26,193,162,\r\n          // 179,161,215,255,255,10,26,196,220,193,191,180,249,190,161,80,255,\r\n          // 255,6,26,215,212,211,201,103,255,255,10,26,179,172,212,189,202,211,\r\n          // 190,245,100,255,255,10,26,201,193,181,231,191,236,180,242,155,255,\r\n          // 255,9,26,203,171,206,196,188,254,49,22,255,255,4,26,119,50,199,255,255,\r\n          // 4,250,79,75,152,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\r\n          // 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\r\n          \r\n          var data=[0,1,2,3,4,9,6,7,8,10] \r\n          for(let i=0 ;i<data.length;i++)\r\n          {\r\n              if(i==5)\r\n              {\r\n               data.splice(i,5)   \r\n\r\n                break;\r\n              }\r\n          }\r\n\r\n          var nameByte = Array.from(iconv.encode(\"VolleyAction/1\",'utf8'));\r\n          var nameByte1 = Array.from(iconv.encode(\"VolleyAction/1\",'gb2312'));\r\n          console.log(nameByte);\r\n          console.log(nameByte1);\r\n         // console.log(data);  \r\n      }\r\n    },\r\n    mounted(){\r\n      //this.requestSerialPort();\r\n      //this.getSerialPorts();\r\n      // this.f()\r\n    }\r\n    \r\n  }\r\n  </script>","import { render } from \"./Home.vue?vue&type=template&id=9c1e3432\"\nimport script from \"./Home.vue?vue&type=script&lang=js\"\nexport * from \"./Home.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<!--变七机器人通讯结构-->\r\n<template>\r\n    <h3 >变七机器人通讯结构</h3>\r\n    <p>连接方式         : 串口</p>\r\n    <p>配置参数baudRate : 115200</p>\r\n    <p>配置参数parity   : 0</p>\r\n    <p>配置参数dataBits : 8</p>\r\n    <p>配置参数stopBits : 1</p>\r\n    <el-button type=\"primary\" v-on:click=\"requestSerialPort()\">连接</el-button> \r\n     <label> 连接成功后，发送[0xFF, 0xFF, 0x02, 0xF5, 0xF7] 指令0xF5是进入PC编程模式 0xF7是(指令+数据)和%256的结果\r\n         <br> 发送后接收数据直到接收[0xFF,0xFF,0x04\t0xF4,0x4F 0x4B,0x93] 当中的数据需要进行处理</label>\r\n    <p></p>\r\n    <el-button type=\"primary\" v-on:click=\"closePose()\">关闭</el-button><label>关闭需要发送指令 [0xFF, 0xFF, 0x02, 0xF6, 0xF8] 然后断开端口</label>\r\n    <p></p>\r\n    <el-button type=\"primary\" v-on:click=\"timeSendingPosition()\">时时发送位置</el-button> \r\n    <label>例如:左肩旋转: </label>\r\n    <el-input v-model=\"ArmInput\" style=\"width: 50px;\"/><label>控制舵机移动[0xFF,0xFF,数据长度,指令(0x01),数据(位置+速度),sum和]指定左肩的下标控制</label>\r\n    <p></p>\r\n    <el-button type=\"primary\" v-on:click=\"humanoidInitial()\" >人形初始位置保存</el-button>\r\n    <label>初始位置在人形的时候就已经读取过，具体是那个看代码，保存指令为[0xFF,0xFF,数据长度,指令(0x03) 数据,sum和] 更改方式也是指定的某个轴的下标</label>\r\n    <p></p>\r\n    <el-button type=\"primary\" v-on:click=\"squatStart()\">下蹲初始位置</el-button>\r\n    <label>初始位置在人形的时候就已经读取过，具体是那个看代码，保存指令为[0xFF,0xFF,数据长度,指令(0x0F) 数据,sum和] 更改方式也是指定的某个轴的下标</label>\r\n    <p></p>\r\n    <input type=\"file\" @change=\"actionDownload\" /> 下载功能\r\n    <p></p>\r\n    <label>下载是将pc上的数据载入到机器人当中，这里用一个.shr机器人保存再本地的文件开始,下载的指令顺序是:删除(0x15),创建(0x14),修改(0x17),下载(0x02)</label>\r\n    <p></p>\r\n    <label>这个地方有个bug就是文件名是数字且这个数字小于10的情况下发送到机器人的数据会多一个具体原因不明(感觉是机器人内部处理的问题，用纯PC的软件不会)</label>\r\n    <p></p>\r\n    <h4>上传功能</h4>\r\n    <label>上传功能首先需要读取一下机器人内部的上传动作文件名</label>\r\n    <p></p>\r\n    <el-button type=\"primary\" v-on:click=\"getActionName()\">读取</el-button>\r\n     <el-select v-model=\"selectedOption\">\r\n        <el-option\r\n          v-for=\"option in vOpentions\"\r\n          :key=\"option\"\r\n          :label=\"option\"\r\n          :value=\"option\"\r\n        >\r\n        </el-option>\r\n     </el-select> \r\n    <label>以绝对路径读取文件夹指令为[0xFF,0xFF,数据长度,指令(0x1A) 数据,sum和]</label>\r\n    <p></p>\r\n    <el-button type=\"primary\" v-on:click=\"getAction()\"> 上传</el-button>\r\n    <label>上传，先选择要上传的文件，然后发送指令[0xFF,0xFF,数据长度,指令(0x16),0x3B,(固定数据) 数据(文件名称数据),sum和]</label>\r\n\r\n\r\n\r\n</template>\r\n<script>\r\nimport    { CreatePosData } from \"/src/PosData.js\";\r\nimport iconv from 'iconv-lite';\r\n\r\n  export default{\r\n\r\n\r\n    data(){\r\n      return{\r\n        port:{},\r\n        isLink:false,\r\n        initData:[],//存放4个基础位置\r\n        ArmInput:0,\r\n        dataArr: [],\r\n        selectedOption:\"\",\r\n        vOpentions:[]\r\n      }\r\n    },\r\n    methods:{\r\n        async requestSerialPort()//连接\r\n        {\r\n          try\r\n          {\r\n            const port = await navigator.serial.requestPort();\r\n            if(port!=null)\r\n            {\r\n                await  port.open({baudRate:115200,parity:\"none\",dataBits:8,stopBits:1})\r\n                this.port = port;\r\n                //console.log(port);\r\n                //console.log(this.port);\r\n                const data = new Uint8Array([0xFF,0xFF,0X02,0xF5,0xF7]); //发送的指令，这里是简写，最好是自己计算下sum和\r\n                const writer = port.writable.getWriter();\r\n                // console.log(writer)\r\n                await writer.write(data);\r\n                await writer.releaseLock();\r\n                const reader  = await port.readable.getReader(); \r\n                this.isLink = false;       \r\n                var dataValue =[];    \r\n                while(true)\r\n                {\r\n                  if(this.isLink==true)\r\n                    {\r\n                      // //4个基础位置,有时候会少一个，不知道是什么原因，这个版本中一定要获取到所有初始数据，那怕不用\r\n                      // console.log(this.initData[0]);//初始位置\r\n                      // console.log(this.initData[1]);\r\n                      // console.log(this.initData[2]);\r\n                      // console.log(this.initData[3]);\r\n                      reader.releaseLock();\r\n                      break;\r\n                    }\r\n                    const{value, done} = await  reader.read();\r\n                    if(done)\r\n                    {\r\n                        reader.releaseLock()\r\n                        break;\r\n                    }\r\n                   \r\n                 \r\n                  // console.log(value)\r\n                  // dataValue.concat(value)\r\n                  // dataValue= dataValue.concat(value)\r\n               \r\n                  for(let i =0 ;i<value.length;i++)\r\n                  {\r\n                    dataValue[dataValue.length] =value[i]\r\n                  }\r\n                  // console.log(dataValue)\r\n                  // console.log(dataValue.length)\r\n                  for(let i=0;i<dataValue.length;i++)\r\n                  {\r\n                   \r\n                    //帧头和指令的判断\r\n                    if(dataValue[i]==0xFF && dataValue[i+1]==0xFF)\r\n                    {\r\n                      var len   = dataValue[i + 2];//长度 \r\n                      var order = dataValue[i + 3];//指令\r\n                     \r\n                      if (len == 0x04 && order == 245 && dataValue[i + 4] == 0x4f && dataValue[i + 5] == 0x4B)\r\n                      {\r\n                        if (dataValue[i + 6] == (len + order + 0x4f + 0x4B) % 256)\r\n                        {\r\n                        \r\n                          this.isLink=true;\r\n                          break;\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n                let flag=0;\r\n                for(let i=0;i<dataValue.length;i++)\r\n                {\r\n                  if(dataValue[i]==0xFF && dataValue[i+1]==0xFF)\r\n                  {\r\n                    var len   = dataValue[i + 2];//长度 \r\n                    var order = dataValue[i + 3];//指令\r\n                    if(len == 50 && order ==245)\r\n                      {\r\n                        var dataArray = [];\r\n                        for(let j =0 ;j<48;j++)\r\n                        {\r\n                          dataArray[j]= dataValue[i+j+4];\r\n                        }\r\n                        i+=48 + 1 + 3;\r\n                        this.initData[flag]=dataArray;\r\n                        flag++;\r\n                      }\r\n                  }\r\n                }\r\n                 //console.log(this.initData[0]);//初始位置\r\n                 //console.log(this.initData[1]);\r\n                 //console.log(this.initData[2]);\r\n                 // console.log(this.initData[3]);\r\n\r\n            }\r\n          }\r\n          catch(err){\r\n             console.error(err);\r\n          }\r\n        },\r\n        async closePose()//关闭\r\n        {\r\n            try{\r\n              //console.log(this.port)\r\n              const data = new Uint8Array([0xFF, 0xFF, 0x02, 0xF6, 0xF8]); //发送的指令，这里是简写，最好是自己计算下sum和\r\n              const writer = this.port.writable.getWriter();\r\n              await writer.write(data);\r\n              //发送发送指令后机器人会主动关闭\r\n              // await writer.close();\r\n              // await this.port.close();\r\n              this.isLink=false;\r\n\r\n            }catch(err){\r\n              console.error(err);\r\n            }\r\n        },\r\n        async timeSendingPosition(){//实时位置         \r\n          try{\r\n                if( this.isLink==true)\r\n                {\r\n                  var data= this.initData[0];\r\n                  // console.log(data)\r\n                  data[12]+= parseInt( this.ArmInput);\r\n                  data[data.length]=0x19;\r\n                  var sendData =[];\r\n                  sendData[0] = 0xFF;\r\n                  sendData[1] = 0xFF;\r\n                  sendData[2] = 0x33;//长度\r\n                  sendData[3] = 0x01;//指令\r\n                  var sum= 0x33+0x01;\r\n                  for(let i =0;i<data.length;i++)\r\n                  {\r\n                    sendData[4+i] = data[i];\r\n                    sum+=data[i];\r\n                  }\r\n                 sum = sum%256;\r\n                 \r\n                sendData[sendData.length]=sum;\r\n                // console.log(sendData)\r\n                 var dataUt = new Uint8Array(sendData);\r\n                 const writer = this.port.writable.getWriter();\r\n                await writer.write(dataUt);\r\n                await writer.releaseLock();\r\n                }\r\n          }catch(err)\r\n          {\r\n            console.error(err);\r\n          }\r\n        },\r\n        async humanoidInitial()//人形初始位置\r\n        {\r\n            try\r\n            {\r\n              if(this.isLink==true)\r\n              {\r\n                var data= this.initData[0];//可更改\r\n              \r\n                var sendData =[];\r\n                sendData[0] = 0xFF;\r\n                sendData[1] = 0xFF;\r\n                sendData[2] = 0x32;//长度\r\n                sendData[3] = 0x03;//指令\r\n                var sum = 0x32+0x03;\r\n                for(let i =0;i<data.length;i++)\r\n                {\r\n                    sendData[4+i] = data[i];\r\n                    sum+=data[i];\r\n                }\r\n                 sum = sum%256;\r\n                 sendData[sendData.length]=sum;\r\n                 console.log(sendData)\r\n                 var dataUt = new Uint8Array(sendData);\r\n                 const writer = this.port.writable.getWriter();\r\n                 await writer.write(dataUt);\r\n                 await writer.releaseLock();\r\n              }\r\n            }\r\n            catch(err)\r\n            {\r\n              console.error(err);\r\n            }\r\n          },\r\n        async squatStart() //下蹲初始\r\n        {\r\n          try\r\n            {\r\n              if(this.isLink==true)\r\n              {\r\n                var data= this.initData[2];//可更改\r\n                var sendData =[];\r\n                sendData[0] = 0xFF;\r\n                sendData[1] = 0xFF;\r\n                sendData[2] = 0x32;//长度\r\n                sendData[3] = 0x0F;//指令\r\n                var sum = 0x32+0x0F;\r\n                for(let i =0;i<data.length;i++)\r\n                {\r\n                    sendData[4+i] = data[i];\r\n                    sum+=data[i];\r\n                }\r\n                 sum = sum%256;\r\n                 sendData[sendData.length]=sum;\r\n                 console.log(sendData)\r\n                 var dataUt = new Uint8Array(sendData);\r\n                 const writer = this.port.writable.getWriter();\r\n                 await writer.write(dataUt);\r\n                 await writer.releaseLock();\r\n                 \r\n              }\r\n            }\r\n            catch(err)\r\n            {\r\n              console.error(err);\r\n            }\r\n\r\n        },\r\n        async actionDownload(event)//动作下载\r\n        {\r\n            //该处有问题，动作文件名是数字且小于10的情况下动作文件会多一个，以测发送的数据集合正常\r\n            //该处为处理文件流的方式下载数据，如果是采用编译器的方式，数据处理流和这个类似\r\n            try{\r\n              const file = event.target.files[0]\r\n              const reader = new FileReader()\r\n              reader.readAsText(file, \"UTF-8\")\r\n              //reader.readAsText(file, \"gb2312\")\r\n              reader.onload = async (evt) =>\r\n               {\r\n              const fileString = evt.target.result\r\n              const count = fileString.trim().split('\\n').length\r\n            \r\n              this.dataArr = []\r\n              for (let index = 0; index < count; index++)\r\n              {\r\n                const fileline = fileString.split(\"\\r\\n\")[index].split(\",\")[0]\r\n                // console.log(fileline)\r\n                //const filelineNumber = (fileline.split(/\\s+/)).map(Number)\r\n                const filelineNumber = (fileline.split(/\\s+/)).map(match => isNaN(match) ? match : match==\"\"?\" \": Number(match));\r\n                this.dataArr.push(filelineNumber)\r\n                //this.dataArr.push(fileline)\r\n              }\r\n              //这种\"253  253  254  \"是不需要处理的行\r\n              //var sss =\"253  253  254  \"\r\n              //console.log(this.dataArr)\r\n              //console.log(isNaN('')?\"1\":\"2\")\r\n             \r\n               if(this.isLink==true)\r\n              {\r\n                  var nameArr = [];\r\n                  var dataAction=[]\r\n                  var dataArr =this.dataArr;\r\n                  var len = dataArr.length;\r\n                  for(let i=0;i<len;i++)\r\n                  {\r\n                    var _is_Action = false; //用于判断当前行是否为动作行\r\n                     if(dataArr[i][0]==' ') //判断当前行为动作数据行\r\n                     {\r\n                      // console.log(i);\r\n                        _is_Action=true;\r\n                     }\r\n                     if(dataArr[i][0] == 253 && dataArr[i][1]==253 && dataArr[i][2] == 254 && dataArr[i][3]!=\" \")//名称\r\n                     {\r\n                       nameArr.push(dataArr[i][3]);\r\n                     }\r\n                     if(_is_Action==true)//最后得处理成那个文件名下的那个动作\r\n                     {\r\n                       dataAction.push(dataArr[i])\r\n                     }\r\n                 }\r\n                 //先转化成PosData这个数据是pc用来在界面上展示动作按钮的数据,如果web编译器需要这个功能处理.shr文件的方式按照这个来\r\n                 var last_loop_byte = 0;\r\n                 len = dataAction.length;\r\n                 var posDataArr=[];\r\n                 for(let i=0; i<len; i++)\r\n                 {\r\n                    //方向处理\r\n                    var _n1 = dataAction[i][5];\r\n                    var _n2 = dataAction[i][6];\r\n                    var _n3 = dataAction[i][7];\r\n                    var _n4 = dataAction[i][8];\r\n                    var _n5 = dataAction[i][9];\r\n                    var _n6 = dataAction[i][10];\r\n                    for(let j=0; j<8; j++)\r\n                    {\r\n                      let _Zero = _n1 & Math.pow(2, 7 - j);\r\n                      if(_Zero!= 0)\r\n                      {\r\n                        dataAction[i][j+11] *= -1;\r\n                      }\r\n                    }\r\n                    for(let j=0; j<8; j++)\r\n                    {\r\n                      let _Zero = _n2 & Math.pow(2, 7 - j);\r\n                      if(_Zero!= 0)\r\n                      {\r\n                        dataAction[i][j+19] *= -1;\r\n                      }\r\n                    }\r\n                    for(let j=0; j<8; j++)\r\n                    {\r\n                      let _Zero = _n3 & Math.pow(2, 7 - j);\r\n                      if(_Zero!= 0)\r\n                      {\r\n                        dataAction[i][j+27] *= -1;\r\n                      }\r\n                    }\r\n                    for(let j=0; j<8; j++)\r\n                    {\r\n                      let _Zero = _n4 & Math.pow(2, 7 - j);\r\n                      if(_Zero!= 0)\r\n                      {\r\n                        dataAction[i][j+35] *= -1;\r\n                      }\r\n                    }\r\n                    for(let j=0; j<8; j++)\r\n                    {\r\n                      let _Zero = _n5 & Math.pow(2, 7 - j);\r\n                      if(_Zero!= 0)\r\n                      {\r\n                        dataAction[i][j+43] *= -1;\r\n                      }\r\n                    }\r\n                    for(let j=0; j<8; j++)\r\n                    {\r\n                      let _Zero = _n6 & Math.pow(2, 7 - j);\r\n                      if(_Zero!= 0)\r\n                      {\r\n                        dataAction[i][j+51] *= -1;\r\n                      }\r\n                    }\r\n                    var Loop_Time=0;\r\n                    var Is_Loop_Start=false;\r\n                    var Is_Loop_End=false;\r\n                    //用于判断是不是循环\r\n                    if(dataAction[i][4]!=0 &&dataAction[i][4]>128)\r\n                    {\r\n                      Loop_Time = dataAction[i][4]-128;\r\n                    }\r\n                    else if(dataAction[i][4]!=0 &&dataAction[i][4]<128)\r\n                    {\r\n                      Loop_Time = dataAction[i][4];\r\n                      Is_Loop_Start=false;\r\n                      Is_Loop_End = true;\r\n                    }\r\n                    else if(dataAction[i][4]==0)\r\n                    {\r\n                     Is_Loop_Start=false;\r\n                     Is_Loop_End=false;\r\n                    }\r\n                    var Pos = [];\r\n                    var number = dataAction[i][3];\r\n                    for(let j=0; j<48 ;j++)\r\n                    {\r\n                       Pos[j] = dataAction[i][j+11]\r\n                    }\r\n                    var Speed  =  dataAction[i][59];//速度\r\n                    var Delay  =  dataAction[i][60];//延迟\r\n                    var Music_State = 0;//音乐\r\n                    let Music_Number= -1;\r\n                    let Music_Chosen= -1;\r\n                    if((dataAction[i][61]!=251 && dataAction[i][62]!=251 ) &&(dataAction[i][61]!=252 && dataAction[i][62]!=252 ))\r\n                    {\r\n                        Music_Chosen = dataAction[i][61]*256+dataAction[i][62];\r\n                        Music_State = 2;\r\n                    }\r\n                    else if(dataAction[i][61] == 251 && dataAction[i][62] ==251)\r\n                    {\r\n                        Music_State = 4;\r\n                    }\r\n                    else if(dataAction[i][61] == 252 && dataAction[i][62] ==252)\r\n                    {\r\n                      Music_State = 3;\r\n                    }\r\n                    Music_Number=Music_Chosen;\r\n                    if(dataAction[i][4]!=0)\r\n                    {\r\n                        if(last_loop_byte == 0 )\r\n                        {\r\n                          Is_Loop_Start= true;\r\n                        }\r\n                        else\r\n                        {\r\n                          Is_Loop_Start=false;\r\n                        }\r\n                        if(dataAction[i][4]<128)\r\n                        {\r\n                          Is_Loop_End=true;\r\n                          Loop_Time= dataAction[i][4];\r\n                        }\r\n                        else\r\n                        {\r\n                          Is_Loop_End=false;\r\n                          Loop_Time= dataAction[i][4]-128;\r\n                        }\r\n                    }\r\n                    if(dataAction[i][4]>128)\r\n                    {\r\n                      last_loop_byte=dataAction[i][4];\r\n                    }\r\n                    else\r\n                    {\r\n                      last_loop_byte=0;\r\n                    }                 \r\n                    var posData={\r\n                      number:number,\r\n                      Name:1,\r\n                      Pos:Pos,\r\n                      Speed:Speed,\r\n                      Delay:Delay,\r\n                      Loop_Time:Loop_Time,\r\n                      Is_Loop_Start:Is_Loop_Start,\r\n                      Is_Loop_End:Is_Loop_End,\r\n                      Music_State:Music_State,\r\n                      Music_Number:Music_Number\r\n\r\n                    }\r\n                    //console.log(posData)\r\n                    posDataArr.push(CreatePosData(posData));     \r\n                 }\r\n                \r\n                 //再把PosData数据转化为下载的数据发送到机器人当中\r\n                 len = posDataArr.length;\r\n                 let currentNumber = 0;\r\n                 var Loop_Time=-1;\r\n                 var Is_In_Loop =false;\r\n                 var currentData=[[]]\r\n\r\n                 var flagNumber= posDataArr[0].number;\r\n              \r\n                 currentData[0]=[]\r\n                 for(let i=0 ; i<len ;i++)\r\n                 {\r\n                  //  if(len == 1)\r\n                  //   {\r\n                  //     currentData[0]=[]\r\n                  //     currentNumber=posDataArr[i].number\r\n                  //   }\r\n                  //   else\r\n                  //   {\r\n                  //     if(currentNumber!=posDataArr[i].number)\r\n                  //     {\r\n                  //       currentNumber =currentNumber+1;\r\n                  //       //console.log(currentNumber)\r\n                  //       currentData[currentNumber] =[]\r\n                  //    }\r\n                  //   } \r\n                    if(flagNumber!=posDataArr[i].number)\r\n                    {\r\n                      flagNumber= posDataArr[i].number;\r\n                      currentNumber++;\r\n                      currentData[currentNumber]=[]\r\n                    }\r\n                 \r\n                    var currentPos = [];\r\n                    currentPos.push(0xFF);\r\n                    currentPos.push(0xFF);\r\n                    currentPos.push(0x3D);\r\n                    currentPos.push(0x02);//指令\r\n\r\n                    //处理循环\r\n                    if(!Is_In_Loop)\r\n                    {\r\n                      currentPos[4] =0\r\n                    }\r\n                    \r\n                    if(Is_In_Loop && !posDataArr[i].Is_Loop_Start && !posDataArr[i].Is_Loop_End)\r\n                    {\r\n                      currentPos[4] = Loop_Time +128;\r\n                    }\r\n                    if(posDataArr[i].Is_Loop_End)\r\n                    {\r\n                      Is_In_Loop=false;\r\n                      currentPos[4] = Loop_Time;\r\n                      Loop_Time=0;\r\n                    }\r\n                    if(posDataArr[i].Is_Loop_Start)\r\n                    {\r\n                      Is_In_Loop=true;\r\n                      Loop_Time = posDataArr[i].Loop_Time;\r\n                      currentPos[4] = Loop_Time+128;\r\n                    }\r\n                    \r\n                    var _int_temp1 = 0;\r\n                    var _int_temp2 = 0;\r\n                    var _int_temp3 = 0;\r\n                    var _int_temp4 = 0;\r\n                    var _int_temp5 = 0;\r\n                    var _int_temp6 = 0;\r\n                  \r\n                    for(let k = 0 ; k< 48 ;k++)\r\n                    {\r\n                   \r\n                        if(k < 8)\r\n                        {\r\n                            if(posDataArr[i].Pos[k]<0)\r\n                            {\r\n                              _int_temp1 += parseInt(Math.pow(2,7-k));\r\n                              posDataArr[i].Pos[k]= posDataArr[i].Pos[k] * -1;\r\n                            }\r\n                        }\r\n                       \r\n                        if(k>= 8 && k<16)\r\n                        {\r\n                          if(posDataArr[i].Pos[k]<0)\r\n                          {\r\n                            _int_temp2+= parseInt(Math.pow(2,15-k));\r\n                            posDataArr[i].Pos[k]= posDataArr[i].Pos[k] * -1;\r\n                          }\r\n                        }\r\n                     \r\n                        if(k>=16 && k<24)\r\n                        {\r\n                          if(posDataArr[i].Pos[k]<0)\r\n                          {\r\n                            _int_temp3+= parseInt(Math.pow(2,23-k));\r\n                            posDataArr[i].Pos[k]= posDataArr[i].Pos[k] * -1;\r\n                          }\r\n                        }\r\n                     \r\n                        if(k>=24 && k<32)\r\n                        {\r\n                          if(posDataArr[i].Pos[k]<0)\r\n                          {\r\n                            _int_temp4+= parseInt(Math.pow(2,31-k));\r\n                            posDataArr[i].Pos[k]= posDataArr[i].Pos[k] * -1;\r\n                          }\r\n                        }\r\n                      \r\n                        if(k>=32 && k<40)\r\n                        {\r\n                          if(posDataArr[i].Pos[k]<0)\r\n                          {\r\n                            _int_temp5+= parseInt(Math.pow(2,39-k));\r\n                            posDataArr[i].Pos[k]= posDataArr[i].Pos[k] * -1;\r\n                          }\r\n                        }\r\n                     \r\n                        if(k>=40 && k<48)\r\n                        {\r\n                          if(posDataArr[i].Pos[k]<0)\r\n                          {\r\n                            _int_temp6+= parseInt(Math.pow(2,47-k));\r\n                            posDataArr[i].Pos[k]= posDataArr[i].Pos[k] * -1;\r\n                          }\r\n                        }\r\n                    }\r\n               \r\n                    currentPos[5] = _int_temp1;\r\n                    currentPos[6] = _int_temp2;\r\n                    currentPos[7] = _int_temp3;\r\n                    currentPos[8] = _int_temp4;\r\n                    currentPos[9] = _int_temp5;\r\n                    currentPos[10] = _int_temp6;\r\n                    for(let k=0; k<48;k++)\r\n                    {\r\n                      currentPos[k+11]= posDataArr[i].Pos[k]\r\n                    }\r\n                    \r\n                   \r\n                    currentPos[59] = posDataArr[i].Speed;\r\n                    currentPos[60] = posDataArr[i].Delay;\r\n                    switch(posDataArr[i].Music_State)\r\n                    {\r\n                        case 1:\r\n                          currentPos[61] = parseInt(posDataArr[i].Music_Number / 256);\r\n                          currentPos[62] = parseInt(posDataArr[i].Music_Number % 256);\r\n                        break;\r\n                        case 2:\r\n                          currentPos[61] = parseInt(posDataArr[i].Music_Number / 256);\r\n                          currentPos[62] = parseInt(posDataArr[i].Music_Number % 256);\r\n                        break;\r\n                        case 3:\r\n                          currentPos[61] = 252;\r\n                          currentPos[62] = 252;\r\n                        break;\r\n                        case 4:\r\n                          currentPos[61] = 251;\r\n                          currentPos[62] = 251;\r\n                        break;\r\n                    }\r\n                    var sum =0;\r\n                    //计算sum和\r\n                  \r\n                    for(let k =2; k<63;k++)\r\n                    {\r\n                      sum+=  currentPos[k];\r\n                    }\r\n                    sum = sum%256;\r\n                    currentPos[63]= sum;\r\n                   \r\n                    currentData[currentNumber].push(currentPos)\r\n                 }\r\n                console.log(currentData)\r\n                 //向机器人发送指令上传文件\r\n                len = nameArr.length \r\n               \r\n               for(let i=0;i<len; i++)\r\n                //for(let i=0;i<1; i++)\r\n                {\r\n                \r\n                    //每次循环需要延迟，因为机器人不可能接收的那么快\r\n                    let promise = new Promise((resolve, reject) => {\r\n                                   setTimeout(() => resolve(), 50)\r\n                                    });\r\n                     await  promise;\r\n                     var selectedName = nameArr[i];\r\n                     console.log(selectedName);\r\n                     var typeName = selectedName.substring(0,4);//用于判断文件夹名\r\n                     var actionName = selectedName.substring(4);//文件名\r\n                     if(typeName == \"地面::\")\r\n                     {\r\n                        typeName = \"GroundAction/\";\r\n                     }\r\n                     else if(typeName == \"凌空::\")\r\n                     {\r\n                        typeName = \"VolleyAction/\";\r\n                     }\r\n                     //删除\r\n                     actionName=typeName + actionName;\r\n                     //console.log(actionName);\r\n                     //var nameByte = Array.from(iconv.encode(actionName,'gb2312'));//用iconv与C# 解析出来的结果一致\r\n                     var nameByte = Array.from(iconv.encode(actionName,'utf8'));//用iconv与C# 解析出来的结果一致\r\n                     var length = nameByte.length;\r\n                     var senLength = length + 2;\r\n                     var createCMD = [];\r\n                     createCMD[0] = 0xFF;\r\n                     createCMD[1] = 0xFF;\r\n                     createCMD[2] = senLength;//计算出来的长度\r\n                     createCMD[3] = 0x15;//指令删除\r\n                     var sum = senLength+0x15;//这个是用来计算sum和最好单独写出来一个公用方法\r\n                     for(let j = 0; j<length ;j++)\r\n                     {\r\n                        createCMD.push(nameByte[j])\r\n                        sum = sum+nameByte[j];\r\n                     }\r\n                     sum = sum % 256;\r\n                     createCMD.push(sum);\r\n                     //console.log(createCMD)\r\n                     var dataUt = new Uint8Array(createCMD);\r\n                     const  writer  = this.port.writable.getWriter();\r\n                     await writer.write(dataUt);\r\n                     const reader = await this.port.readable.getReader();\r\n                     var dataValue =[];    \r\n                     var redResult =false;\r\n                     while(!redResult)\r\n                     {\r\n                        const{value,done}  = await reader.read();\r\n                        if(done)\r\n                        {\r\n                            reader.releaseLock();\r\n                            break;\r\n                        }  \r\n                        for(let i = 0 ; i< value.length;i++)\r\n                        {\r\n                          dataValue[dataValue.length] =value[i];\r\n                        }\r\n                         // console.log(dataValue);\r\n                        for(let i = 0 ; i< dataValue.length;i++)\r\n                        {\r\n                          if(dataValue[i] == 0xFF && dataValue[i+1] ==0xFF)\r\n                          { \r\n                            var order = dataValue[i + 3];//指令\r\n                            if (order== 0x15 && dataValue[i + 4] == 0x4f && dataValue[i + 5] == 0x4B)\r\n                            {\r\n                          \r\n                             redResult=true;\r\n                            }\r\n                        }\r\n                       }\r\n                        \r\n                     }\r\n                     //console.log(\"创建\");\r\n                     let promise1 = new Promise((resolve, reject) => {\r\n                                   setTimeout(() => resolve(), 50)\r\n                                    });\r\n                     await  promise1;\r\n                     //创建\r\n                     createCMD[3] = 0x14;//创建指令\r\n                     createCMD[createCMD.length-1] =  createCMD[createCMD.length-1]-1;\r\n                     dataUt = new Uint8Array(createCMD);\r\n                     await writer.write(dataUt);\r\n                     dataValue =[];    \r\n                     redResult =false;\r\n                     while(!redResult)\r\n                     {\r\n                        const{value,done}  = await reader.read();\r\n                        if(done)\r\n                        {\r\n                            reader.releaseLock();\r\n                            break;\r\n                        }  \r\n                        for(let i = 0 ; i< value.length;i++)\r\n                        {\r\n                          dataValue[dataValue.length] =value[i];\r\n                        }\r\n                        for(let i = 0 ; i< dataValue.length;i++)\r\n                        {\r\n                          if(dataValue[i] == 0xFF && dataValue[i+1] ==0xFF)\r\n                          { \r\n                            var order = dataValue[i + 3];//指令\r\n                            if (order== 0x14 && dataValue[i + 4] == 0x4f && dataValue[i + 5] == 0x4B)\r\n                            {\r\n                               //console.log(dataValue);\r\n                              redResult=true;\r\n                           }\r\n                        }\r\n\r\n                        }\r\n                        \r\n                     }\r\n                    let promise2 = new Promise((resolve, reject) => {\r\n                                   setTimeout(() => resolve(), 50)\r\n                                    });\r\n                     await  promise2;\r\n                   \r\n                    //修改\r\n                     createCMD = [];\r\n                     sum=0;\r\n                     actionName=actionName+\".sh\";\r\n                     console.log(actionName);\r\n                     nameByte = Array.from(iconv.encode(actionName,'gb2312'));\r\n                     //nameByte = Array.from(iconv.encode(actionName,'utf8'));\r\n                     length = nameByte.length;\r\n                     senLength = length + 2;\r\n                     createCMD[0] = 0xFF;\r\n                     createCMD[1] = 0xFF;\r\n                     createCMD[2] = senLength;\r\n                     createCMD[3] = 0x17;//修改\r\n                     sum = senLength+0x17;\r\n                     for(let j = 0; j<length ;j++)\r\n                     {\r\n                        createCMD.push(nameByte[j])\r\n                        sum = sum+nameByte[j];\r\n                    \r\n                     }\r\n                     sum = sum % 256;\r\n                     createCMD.push(sum);\r\n                     dataUt = new Uint8Array(createCMD);\r\n                     await writer.write(dataUt);\r\n                     dataValue =[];    \r\n                     redResult =false;\r\n                     while(!redResult)\r\n                     {\r\n                        const{value,done}  = await reader.read();\r\n                        if(done)\r\n                        {\r\n                            reader.releaseLock();\r\n                            break;\r\n                        }  \r\n                        for(let i = 0 ; i< value.length;i++)\r\n                        {\r\n                          dataValue[dataValue.length] =value[i];\r\n                        }\r\n                        for(let i = 0 ; i< dataValue.length;i++)\r\n                        {\r\n                          if(dataValue[i] == 0xFF && dataValue[i+1] ==0xFF)\r\n                          { \r\n                             var order = dataValue[i + 3];//指令\r\n                            if (order== 0x17 && dataValue[i + 4] == 0x4f && dataValue[i + 5] == 0x4B)\r\n                            {\r\n                            //console.log(dataValue);\r\n                             redResult=true;\r\n                            }\r\n                          }\r\n                        }  \r\n                     }\r\n\r\n                    let promise3 = new Promise((resolve, reject) => {\r\n                                   setTimeout(() => resolve(), 50)\r\n                                    });\r\n                     await  promise3;\r\n                     console.log(currentData[i])\r\n                     //上传数据\r\n                     for(let j = 0 ; j< currentData[i].length;j++)\r\n                     {\r\n                      let promises = new Promise((resolve, reject) => {\r\n                                   setTimeout(() => resolve(), 150)\r\n                                    });\r\n                     await  promises;\r\n                       var  dataSen = new Uint8Array(currentData[i][j]);\r\n                        await writer.write(dataSen);\r\n                        dataValue =[];    \r\n                        redResult =false;\r\n                        while(!redResult)\r\n                       {\r\n                         const{value,done}  = await reader.read();\r\n                          if(done)\r\n                          {\r\n                              reader.releaseLock();\r\n                              break;\r\n                           }  \r\n                        for(let i = 0 ; i< value.length;i++)\r\n                        {\r\n                          dataValue[dataValue.length] =value[i];\r\n                        }\r\n                        for(let i = 0 ; i< dataValue.length;i++)\r\n                        {\r\n                          if(dataValue[i] == 0xFF && dataValue[i+1] ==0xFF)\r\n                          { \r\n                            var order = dataValue[i + 3];//指令\r\n                            if (order== 0x02 && dataValue[i + 4] == 0x4f && dataValue[i + 5] == 0x4B)\r\n                            {\r\n                              console.log(i+\" \"+dataValue);\r\n                              redResult=true;\r\n                            }\r\n                          }\r\n                        }\r\n                     }\r\n                        \r\n                     }\r\n                     //关闭流\r\n                     await writer.releaseLock();\r\n                     await reader.releaseLock();\r\n                     //console.log(\"结束\");\r\n                    }\r\n              }\r\n             }\r\n             \r\n     \r\n            }\r\n            catch(err)\r\n            {\r\n             console.error(err);\r\n            }\r\n        },\r\n        async getActionName()//获取动作文件名\r\n        {\r\n            try{\r\n              if(this.isLink==true)\r\n              {\r\n                 var nameByte = Array.from(iconv.encode(\"GroundAction\",'gb2312'));\r\n                 var length = nameByte.length;\r\n                 var sendLength  = length+2;\r\n                 var sendByte = [];\r\n                 sendByte[0] = 0xFF;\r\n                 sendByte[1] = 0xFF;\r\n                 sendByte[2] = sendLength;\r\n                 sendByte[3] = 0x1A;\r\n                 var sum = sendLength + 0x1A;\r\n                 for(let i =  0; i< length; i++)\r\n                 {\r\n                   sendByte.push(nameByte[i]);\r\n                   sum+=nameByte[i];\r\n                 }\r\n                 sum = sum%256;\r\n                 sendByte.push(sum);\r\n                 var dataUt = new Uint8Array(sendByte);\r\n                 const write = this.port.writable.getWriter();\r\n                 await write.write(dataUt);\r\n                 const reader = await this.port.readable.getReader();\r\n                 var dataValue=[];\r\n                 var redResult =false;\r\n                 while(!redResult)\r\n                 {\r\n                    const{value,done} = await reader.read();\r\n                    if(done)\r\n                    {\r\n                        reader.releaseLock();\r\n                        break;\r\n                    }\r\n                    for(let i=0;i<value.length;i++)\r\n                    {\r\n                      dataValue[dataValue.length] = value[i];\r\n                    }\r\n                    for(let i=0; i<dataValue.length;i++)\r\n                    {\r\n                        if(dataValue[i]== 0xFF && dataValue[i+1] ==0xFF)\r\n                        {\r\n                              //该处需要进行特殊处理\r\n                             if(dataValue[i+2]==0x04&& dataValue[i+3]==0xFA&& dataValue[i+4]==0x4F&& dataValue[i+5]==0x4B && dataValue[i+6]==0x98)\r\n                             {\r\n                                redResult=true;\r\n                                dataValue.slice(i,6)\r\n                                break;\r\n                             }\r\n                            //  else if(dataValue[i+2]!=0x04 && dataValue[i+3]==0xFA)\r\n                            //  {\r\n                            //     var byteLength = dataValue[i+2];\r\n                            //     var byteSum = dataValue[i+byteLength];\r\n                            //     var dataSum = dataValue[i+2]+ dataValue[i+3];\r\n                            //     for(let j= 0 ;j<byteLength-1;j++)\r\n                            //     {\r\n                            //       dataSum += dataValue[i+4+j];\r\n                            //     }\r\n                            //     dataSum =dataSum%256;\r\n                            //  }                                                        \r\n                        }\r\n                    }\r\n                  }\r\n\r\n                  var dataList =[];\r\n                  //处理动作文件\r\n                  for(let i=0;i<dataValue.length;i++)\r\n                  {\r\n                      if(dataValue[i]==0xFF&&dataValue[i+1]==0xFF&&dataValue[i+2]!=0xFF&&dataValue[i+3]==0x1A )\r\n                      {\r\n                          //获取长度\r\n                          var dataCount = dataValue[i+2];\r\n                          var dataInfo =[];\r\n                          for(let j = 0; j<dataCount-2;j++)\r\n                          {\r\n                            dataInfo.push(dataValue[i+4+j]);\r\n                          }\r\n                          i=i+2+dataCount;\r\n                           //转汉字，但是需要增加前缀\r\n                          var strData =\"地面::\"+ iconv.decode((dataInfo),'gb2312');\r\n                          dataList.push(strData);\r\n                          //console.log(strData); \r\n                      }\r\n                  }\r\n\r\n                  //处理凌空的文件夹\r\n                  nameByte = Array.from(iconv.encode(\"VolleyAction\",'gb2312'));\r\n                  length = nameByte.length;\r\n                  sendLength = length +2; \r\n                  sendByte = [];\r\n                  sendByte[0] = 0xFF;\r\n                  sendByte[1] = 0xFF;\r\n                  sendByte[2] = sendLength;\r\n                  sendByte[3] = 0x1A;\r\n                  sum = sendLength + 0x1A;\r\n                  for(let i= 0;i<length;i++)\r\n                  {\r\n                      sendByte.push(nameByte[i]);\r\n                      sum+=nameByte[i];\r\n                  }\r\n                  sum =sum%256;\r\n                  sendByte.push(sum);\r\n                  dataUt = new Uint8Array(sendByte);\r\n                  await write.write(dataUt);\r\n                  dataValue=[];\r\n                  redResult = false;\r\n                  while(!redResult)\r\n                  {\r\n                     const{value,done} = await reader.read();\r\n                     if(done)\r\n                     {\r\n                        reader.releaseLock();\r\n                        break;\r\n                     }\r\n                     for(let i=0; i<value.length;i++)\r\n                     {\r\n                        dataValue[dataValue.length] =value[i];\r\n                     }\r\n                     for(let i=0;i<dataValue.length;i++)\r\n                     {\r\n                        if(dataValue[i]== 0xFF && dataValue[i+1]==0xFF)\r\n                        {\r\n                          if(dataValue[i+2]==0x04&& dataValue[i+3]==0xFA&& dataValue[i+4]==0x4F&& dataValue[i+5]==0x4B && dataValue[i+6]==0x98)\r\n                          {\r\n                            redResult=true;\r\n                            dataValue.slice(i,6)\r\n                            break;\r\n                          }\r\n                        }\r\n                      }\r\n                  }\r\n\r\n                  for(let i=0;i<dataValue.length;i++)\r\n                  {\r\n                    if(dataValue[i]==0xFF&&dataValue[i+1]==0xFF&&dataValue[i+2]!=0xFF&&dataValue[i+3]==0x1A )\r\n                    {\r\n                      var dataCount = dataValue[i+2];\r\n                      var dataInfo =[];\r\n                      for(let j = 0; j<dataCount-2;j++)\r\n                      {\r\n                        dataInfo.push(dataValue[i+4+j]);\r\n                      }\r\n                      i=i+2+dataCount;\r\n                      var strData =\"凌空::\"+ iconv.decode((dataInfo),'gb2312');\r\n                      dataList.push(strData);\r\n                      //console.log(strData);\r\n                    }\r\n                  }\r\n                  await write.releaseLock();\r\n                  await reader.releaseLock();\r\n                  this.vOpentions=dataList//\r\n\r\n              }\r\n            }\r\n            catch(err)\r\n            {\r\n              console.error(err);\r\n            }\r\n        },\r\n        async getAction()\r\n        {\r\n          try{\r\n              if(this.isLink==true&&this.selectedOption!=\"\")\r\n              {\r\n                var typeName =this.selectedOption.substring(0,4);//用于判断文件夹名\r\n                var actionName = this.selectedOption.substring(4);//文件名\r\n                if(typeName == \"地面::\")\r\n                  {\r\n                    typeName = \"GroundAction/\";\r\n                  }\r\n                  else if(typeName == \"凌空::\")\r\n                  {\r\n                     typeName = \"VolleyAction/\";\r\n                  }\r\n                 actionName=typeName + actionName;\r\n                 var nameByte = Array.from(iconv.encode(actionName,'gb2312'));\r\n                 var length = nameByte.length;\r\n                 var senLength = length + 3;\r\n                 var createCMD = [];\r\n                 createCMD[0] = 0xFF;\r\n                 createCMD[1] = 0xFF;\r\n                 createCMD[2] = senLength;//计算出来的长度\r\n                 createCMD[3] = 0x16;\r\n                 createCMD[4] = 0x3B;\r\n                 var sum = senLength+0x16+0x3B;\r\n                 for(let j = 0; j<length ;j++)\r\n                 {\r\n                   createCMD.push(nameByte[j])\r\n                   sum = sum+nameByte[j];\r\n                 } \r\n                 sum = sum % 256;\r\n                 createCMD.push(sum);\r\n                 var dataUt = new Uint8Array(createCMD);\r\n                 const  writer  = this.port.writable.getWriter();\r\n                 await writer.write(dataUt);\r\n                 const reader = await this.port.readable.getReader();\r\n                 var dataValue =[];    \r\n                 var redResult =false;\r\n                 while(!redResult)\r\n                 {\r\n                    const{value,done} = await reader.read();\r\n                    if(done)\r\n                    {\r\n                        reader.releaseLock();\r\n                        break;\r\n                    }\r\n                    for(let i=0;i<value.length;i++)\r\n                    {\r\n                      dataValue[dataValue.length] = value[i];\r\n                    }\r\n                    for(let i=0; i<dataValue.length;i++)\r\n                    {\r\n                      if(dataValue[i]== 0xFF && dataValue[i+1] ==0xFF)\r\n                      {\r\n                        if(dataValue[i+2]==0x04&& dataValue[i+3]==0xFA&& dataValue[i+4]==0x4F&& dataValue[i+5]==0x4B && dataValue[i+6]==0x98)\r\n                        {\r\n                           redResult=true;\r\n                           dataValue.slice(i,6)\r\n                           break;\r\n                        }\r\n                      }\r\n                    }\r\n                 }\r\n                 var dataList =[];\r\n                 for(let i=0;i<dataValue.length;i++)\r\n                 {\r\n                  if(dataValue[i]==0xFF&&dataValue[i+1]==0xFF&&dataValue[i+2]!=0xFF&&dataValue[i+3]==0x16 )\r\n                  {\r\n                    var dataCount = dataValue[i+2];\r\n                    var dataInfo =[];\r\n                    for(let j = 0; j<dataCount-2;j++)\r\n                    {\r\n                        dataInfo.push(dataValue[i+4+j]);\r\n                       \r\n                    }\r\n                    i=i+2+dataCount;\r\n                    console.log(dataInfo);\r\n                  }\r\n\r\n                 }\r\n                  await writer.releaseLock();\r\n                  await reader.releaseLock();\r\n              }\r\n\r\n          }\r\n          catch(err)\r\n          {\r\n            console.error(err);\r\n          }\r\n        }\r\n    }\r\n  }\r\n\r\n</script>","//用于上传下载的数据处理类\r\nexport default class PosData{\r\n    constructor({number,Name,Pos,Speed,Delay,Loop_Time,Is_Loop_Start,Is_Loop_End,Music_State,Music_Number})\r\n    {\r\n        this.number = number,//点位编号，对应的是那个动作下的点\r\n        this.Name = Name,//无作用\r\n        this.Pos = Pos,//点位信息的集合\r\n        this.Speed = Speed,//速度\r\n        this.Delay = Delay,//延迟\r\n        this.Loop_Time = Loop_Time,//循环次数\r\n        this.Is_Loop_Start = Is_Loop_Start,//是否是循环的开始\r\n        this.Is_Loop_End = Is_Loop_End,//是否是循环的结束\r\n        this.Music_State=Music_State,//0代表未选择，1代表指导音乐，2代表自定义音乐，3代表继续，4代表停止\r\n        this.Music_Number= Music_Number//音乐的文件夹以及选择的那个音乐 那个文件夹是这个数/256 那个文件是这个数%256\r\n    }   \r\n}\r\n\r\nexport function CreatePosData(posDataInit){\r\n    //console.log(posDataInit)\r\n    return new PosData({\r\n        number : posDataInit.number,\r\n        Name : posDataInit.Name,\r\n        Pos : posDataInit.Pos,\r\n        Speed : posDataInit.Speed,\r\n        Delay : posDataInit.Delay,\r\n        Loop_Time:posDataInit.Loop_Time,\r\n        Is_Loop_Start : posDataInit.Is_Loop_Start,\r\n        Is_Loop_End : posDataInit.Is_Loop_End,\r\n        Music_State:posDataInit.Music_State,\r\n        Music_Number:posDataInit.Music_Number\r\n    })\r\n}\r\n\r\n\r\n","import { render } from \"./Convoy_Seven.vue?vue&type=template&id=55d66170\"\nimport script from \"./Convoy_Seven.vue?vue&type=script&lang=js\"\nexport * from \"./Convoy_Seven.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","`\r\n<!--大黄蜂机器人通讯结构-->\r\n<template>\r\n  <h3>大黄蜂机器人通讯结构</h3>\r\n  <p>连接方式 : 串口</p>\r\n  <p>配置参数baudRate : 115200</p>\r\n  <p>配置参数parity : 0</p>\r\n  <p>配置参数dataBits : 8</p>\r\n  <p>配置参数stopBits : 1</p>\r\n  <p>配置参数bufferSize : 4096</p>\r\n  <el-button type=\"primary\" v-on:click=\"requestSerialPort()\">连接</el-button>\r\n  <label>\r\n    连接成功后，发送[0xFF, 0xFF, 0x02, 0xF5, 0xF7] 指令0xF5是进入PC编程模式\r\n    0xF7是(指令+数据)和%256的结果 <br />\r\n    发送后接收数据直到接收[0xFF,0xFF,0x04 0xF4,0x4F 0x4B,0x93]\r\n    当中的数据需要进行处理</label\r\n  >\r\n  <p></p>\r\n  <input type=\"file\" @change=\"actionDownload\" />\r\n  <p></p>\r\n  <label\r\n    >下载是将pc上的数据载入到机器人当中，这里用一个.shr机器人保存再本地的文件开始,下载的指令顺序是:删除(0x07),创建(0X06),下载(0x02)</label\r\n  >\r\n  <p></p>\r\n</template>\r\n<script>\r\nimport { CreatePosData } from \"/src/PosData.js\";\r\nimport iconv from \"iconv-lite\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      port: {}, //通讯接口\r\n      isLink: false, //是否连接\r\n      initData: [], //存放4个初始位置\r\n      dataArr: [],\r\n    };\r\n  },\r\n  methods: {\r\n    async requestSerialPort() {\r\n      //连接\r\n      try {\r\n        const port = await navigator.serial.requestPort();\r\n        if (port != null) {\r\n          //await port.open({baudRate:115200,parity:\"none\",dataBits:8,stopBits:1,flowControl: \"none\"})\r\n          await port.open({\r\n            baudRate: 115200,\r\n            dataBits: 8,\r\n            stopBits: 1,\r\n            bufferSize: 4096,\r\n          });\r\n\r\n          this.port = port;\r\n          const data = new Uint8Array([0xff, 0xff, 0x02, 0xf5, 0xf7]);\r\n          const writer = port.writable.getWriter();\r\n          await writer.write(data);\r\n          await writer.releaseLock();\r\n          //this.isLink= true;\r\n          const reader = await port.readable.getReader();\r\n          this.isLink = false;\r\n          var dataValue = [];\r\n\r\n          while (true) {\r\n            if (this.isLink == true) {\r\n              reader.releaseLock();\r\n              break;\r\n            }\r\n            const { value, done } = await reader.read();\r\n            if (done) {\r\n              reader.releaseLock();\r\n              break;\r\n            }\r\n            for (let i = 0; i < value.length; i++) {\r\n              dataValue[dataValue.length] = value[i];\r\n            }\r\n            for (let i = 0; i < dataValue.length; i++) {\r\n              //帧头和指令判断\r\n              if (dataValue[i] == 0xff && dataValue[i + 1] == 0xff) {\r\n                var len = dataValue[i + 2]; //长度\r\n                var order = dataValue[i + 3]; //指令\r\n                if (\r\n                  len == 0x04 &&\r\n                  order == 245 &&\r\n                  dataValue[i + 4] == 0x4f &&\r\n                  dataValue[i + 5] == 0x4b\r\n                ) {\r\n                  if (dataValue[i + 6] == (len + order + 0x4f + 0x4b) % 256) {\r\n                    this.isLink = true;\r\n                    break;\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n          let flag = 0;\r\n          for (let i = 0; i < dataValue.length; i++) {\r\n            if (dataValue[i] == 0xff && dataValue[i + 1] == 0xff) {\r\n              var len = dataValue[i + 2]; //长度\r\n              var order = dataValue[i + 3]; //指令\r\n              if (len == 50 && order == 245) {\r\n                var dataArray = [];\r\n                for (let j = 0; j < 48; j++) {\r\n                  dataArray[j] = dataValue[i + j + 4];\r\n                }\r\n                i += 48 + 1 + 3;\r\n                this.initData[flag] = dataArray;\r\n                flag++;\r\n              }\r\n            }\r\n          }\r\n          console.log(this.initData);\r\n        }\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    },\r\n    async actionDownload(event) {\r\n      try {\r\n        const file = event.target.files[0];\r\n        const reader = new FileReader();\r\n        reader.readAsText(file, \"UTF-8\");\r\n        reader.onload = async (evt) => {\r\n          const fileString = evt.target.result;\r\n\r\n          const count = fileString.trim().split(\"\\n\").length;\r\n          this.dataArr = [];\r\n          for (let index = 0; index < count; index++) {\r\n            const fileline = fileString.split(\"\\r\\n\")[index].split(\",\")[0];\r\n            const filelineNumber = fileline\r\n              .split(/\\s+/)\r\n              .map((match) =>\r\n                isNaN(match) ? match : match == \"\" ? \" \" : Number(match)\r\n              );\r\n            this.dataArr.push(filelineNumber);\r\n          }\r\n          if (this.isLink == true) {\r\n            var nameArr = [];\r\n            var dataAction = [];\r\n            var dataArr = this.dataArr;\r\n            var len = dataArr.length;\r\n            for (let i = 0; i < len; i++) {\r\n              var _is_Action = false;\r\n              if (dataArr[i][0] == \" \") {\r\n                _is_Action = true;\r\n              }\r\n              if (\r\n                dataArr[i][0] == 253 &&\r\n                dataArr[i][1] == 253 &&\r\n                dataArr[i][2] == 254 &&\r\n                dataArr[i][3] != \" \"\r\n              ) {\r\n                nameArr.push(dataArr[i][3]);\r\n              }\r\n              if (_is_Action == true) {\r\n                dataAction.push(dataArr[i]);\r\n              }\r\n            }\r\n            var last_loop_byte = 0;\r\n            len = dataAction.length;\r\n            var posDataArr = [];\r\n            console.log(dataAction);\r\n            for (let i = 0; i < len; i++) {\r\n              var _n1 = dataAction[i][5];\r\n              var _n2 = dataAction[i][6];\r\n              var _n3 = dataAction[i][7];\r\n              var _n4 = dataAction[i][8];\r\n              var _n5 = dataAction[i][9];\r\n              var _n6 = dataAction[i][10];\r\n              for (let j = 0; j < 8; j++) {\r\n                let _Zero = _n1 & Math.pow(2, 7 - j);\r\n                if (_Zero != 0) {\r\n                  dataAction[i][j + 11] *= -1;\r\n                }\r\n              }\r\n              for (let j = 0; j < 8; j++) {\r\n                let _Zero = _n2 & Math.pow(2, 7 - j);\r\n                if (_Zero != 0) {\r\n                  dataAction[i][j + 19] *= -1;\r\n                }\r\n              }\r\n              for (let j = 0; j < 8; j++) {\r\n                let _Zero = _n3 & Math.pow(2, 7 - j);\r\n                if (_Zero != 0) {\r\n                  dataAction[i][j + 27] *= -1;\r\n                }\r\n              }\r\n              for (let j = 0; j < 8; j++) {\r\n                let _Zero = _n4 & Math.pow(2, 7 - j);\r\n                if (_Zero != 0) {\r\n                  dataAction[i][j + 35] *= -1;\r\n                }\r\n              }\r\n              for (let j = 0; j < 8; j++) {\r\n                let _Zero = _n5 & Math.pow(2, 7 - j);\r\n                if (_Zero != 0) {\r\n                  dataAction[i][j + 43] *= -1;\r\n                }\r\n              }\r\n              for (let j = 0; j < 8; j++) {\r\n                let _Zero = _n6 & Math.pow(2, 7 - j);\r\n                if (_Zero != 0) {\r\n                  dataAction[i][51] *= -1;\r\n                }\r\n              }\r\n              var Loop_Time = 0;\r\n              var Is_Loop_Start = false;\r\n              var Is_Loop_End = false;\r\n              if (dataAction[i][4] != 0 && dataAction[i][4] > 128) {\r\n                Loop_Time = dataAction[i][4] - 128;\r\n              } else if (dataAction[i][4] != 0 && dataAction[i][4] > 128) {\r\n                Loop_Time = dataAction[i][4];\r\n                Is_Loop_Start = false;\r\n                Is_Loop_End = true;\r\n              } else if (dataAction[i][4] == 0) {\r\n                Is_Loop_Start = false;\r\n                Is_Loop_End = false;\r\n              }\r\n              var Pos = [];\r\n              var number = dataAction[i][3];\r\n              for (let j = 0; j < 48; j++) {\r\n                Pos[j] = dataAction[i][j + 11];\r\n              }\r\n              var Speed = dataAction[i][59];\r\n              var Delay = dataAction[i][60];\r\n              var Music_State = 0;\r\n              var Music_Number = -1;\r\n              var Music_Chosen = -1;\r\n              if (\r\n                dataAction[i][61] != 251 &&\r\n                dataAction[i][62] != 251 &&\r\n                dataAction[i][61] != 252 &&\r\n                dataAction[i][62] != 252\r\n              ) {\r\n                Music_Chosen = dataAction[i][61] * 256 + dataAction[i][62];\r\n                Music_State = 2;\r\n              } else if (dataAction[i][61] == 251 && dataAction[i][62] == 251) {\r\n                Music_State = 4;\r\n              } else if (dataAction[i][61] == 252 && dataAction[i][62] == 252) {\r\n                Music_State = 3;\r\n              }\r\n              Music_Number = Music_Chosen;\r\n              if (dataAction[i][4] != 0) {\r\n                if (last_loop_byte == 0) {\r\n                  Is_Loop_Start = true;\r\n                } else {\r\n                  Is_Loop_Start = false;\r\n                }\r\n                if (dataAction[i][4] < 128) {\r\n                  Is_Loop_End = true;\r\n                  Loop_Time = dataAction[i][4];\r\n                } else {\r\n                  Is_Loop_End = false;\r\n                  Loop_Time = dataAction[i][4] - 128;\r\n                }\r\n              }\r\n              if (dataAction[i][4] > 128) {\r\n                last_loop_byte = dataAction[i][4];\r\n              } else {\r\n                last_loop_byte = 0;\r\n              }\r\n              var posData = {\r\n                number: number,\r\n                Name: 1,\r\n                Pos: Pos,\r\n                Speed: Speed,\r\n                Delay: Delay,\r\n                Loop_Time: Loop_Time,\r\n                Is_Loop_Start: Is_Loop_Start,\r\n                Is_Loop_End: Is_Loop_End,\r\n                Music_State: Music_State,\r\n                Music_Number: Music_Number,\r\n              };\r\n              posDataArr.push(CreatePosData(posData));\r\n            }\r\n            console.log(posDataArr);\r\n            if (this.isLink == false) {\r\n              return;\r\n            }\r\n\r\n            len = posDataArr.length;\r\n            let currentnumber = 0;\r\n            var Loop_Time = -1;\r\n            var Is_In_Loop = false;\r\n            var currentData = [[]];\r\n            var flagNumber = posDataArr[0].number;\r\n            currentData[0] = [];\r\n            for (let i = 0; i < len; i++) {\r\n              if (flagNumber != posDataArr[i].number) {\r\n                flagNumber = posDataArr[i].number;\r\n                currentnumber++;\r\n                currentData[currentnumber] = [];\r\n              }\r\n              var currentPos = [];\r\n              currentPos.push(0xff);\r\n              currentPos.push(0xff);\r\n              currentPos.push(0x3d);\r\n              currentPos.push(0x02);\r\n              if (!Is_In_Loop) {\r\n                currentPos[4] = 0;\r\n              }\r\n              if (\r\n                Is_In_Loop &&\r\n                !posDataArr[i].Is_Loop_Start &&\r\n                !posDataArr[i].Is_Loop_End\r\n              ) {\r\n                currentPos[4] = Loop_Time + 128;\r\n              }\r\n              if (posDataArr[i].Is_Loop_End) {\r\n                Is_In_Loop = false;\r\n                currentPos[4] = Loop_Time;\r\n                Loop_Time = 0;\r\n              }\r\n              if (posDataArr[i].Is_Loop_Start) {\r\n                Is_In_Loop = true;\r\n                Loop_Time = posDataArr[i].Loop_Time;\r\n                currentPos[4] = Loop_Time + 128;\r\n              }\r\n              var _int_temp1 = 0;\r\n              var _int_temp2 = 0;\r\n              var _int_temp3 = 0;\r\n              var _int_temp4 = 0;\r\n              var _int_temp5 = 0;\r\n              var _int_temp6 = 0;\r\n\r\n              for (let k = 0; k < 48; k++) {\r\n                if (k < 8) {\r\n                  if (posDataArr[i].Pos[k] < 0) {\r\n                    _int_temp1 += parseInt(Math.pow(2, 7 - k));\r\n                    posDataArr[i].Pos[k] = posDataArr[i].Pos[k] * -1;\r\n                  }\r\n                }\r\n                if (k >= 8 && k < 16) {\r\n                  if (posDataArr[i].Pos[k] < 0) {\r\n                    _int_temp2 += parseInt(Math.pow(2, 15 - k));\r\n                    posDataArr[i].Pos[k] = posDataArr[i].pos[k] * -1;\r\n                  }\r\n                }\r\n\r\n                if (k >= 16 && k < 24) {\r\n                  if (posDataArr[i].Pos[k] < 0) {\r\n                    _int_temp3 += parseInt(Math.pow(2, 23 - k));\r\n                    posDataArr[i].Pos[k] = posDataArr[i].Pos[k] * -1;\r\n                  }\r\n                }\r\n                if (k >= 24 && k < 32) {\r\n                  if (posDataArr[i].Pos[k] < 0) {\r\n                    _int_temp4 += parseInt(Math.pow(2, 31 - k));\r\n                    posDataArr[i].Pos[k] = posDataArr[i].Pos[k] * -1;\r\n                  }\r\n                }\r\n                if (k >= 32 && k < 40) {\r\n                  if (posDataArr[i].Pos[k] < 0) {\r\n                    _int_temp5 += parseInt(Math.pow(2, 39 - k));\r\n                    posDataArr[i].Pos[k] = posDataArr[i].Pos[k] * -1;\r\n                  }\r\n                }\r\n                if (k >= 40 && k < 48) {\r\n                  if (posDataArr[i].Pos[k] < 0) {\r\n                    _int_temp6 += parseInt(Math.pow(2, 47 - k));\r\n                    posDataArr[i].Pos[k] = posDataArr[i].Pos[k] * -1;\r\n                  }\r\n                }\r\n              }\r\n              currentPos[5] = _int_temp1;\r\n              currentPos[6] = _int_temp2;\r\n              currentPos[7] = _int_temp3;\r\n              currentPos[8] = _int_temp4;\r\n              currentPos[9] = _int_temp5;\r\n              currentPos[10] = _int_temp6;\r\n              for (let k = 0; k < 48; k++) {\r\n                currentPos[k + 11] = posDataArr[i].Pos[k];\r\n              }\r\n\r\n              currentPos[59] = posDataArr[i].Speed;\r\n              currentPos[60] = posDataArr[i].Delay;\r\n              switch (posDataArr[i].Music_State) {\r\n                case 1:\r\n                  currentPos[61] = parseInt(posDataArr[i].Music_Number / 256);\r\n                  currentPos[62] = parseInt(posDataArr[i].Music_Number % 256);\r\n                  break;\r\n                case 2:\r\n                  currentPos[61] = parseInt(posDataArr[i].Music_Number / 256);\r\n                  currentPos[62] = parseInt(posDataArr[i].Music_Number % 256);\r\n                  break;\r\n                case 3:\r\n                  currentPos[61] = 252;\r\n                  currentPos[62] = 252;\r\n                  break;\r\n                case 4:\r\n                  currentPos[61] = 251;\r\n                  currentPos[62] = 251;\r\n                  break;\r\n              }\r\n              var sum = 0;\r\n              for (let k = 2; k < 63; k++) {\r\n                sum += currentPos[k];\r\n              }\r\n              sum = sum % 256;\r\n              currentPos[63] = sum;\r\n              currentData[currentnumber].push(currentPos);\r\n            }\r\n            len = nameArr.length;\r\n            console.log(currentData);\r\n            for (let i = 0; i < len; i++) {\r\n              let promise = new Promise((resolve, reject) => {\r\n                setTimeout(() => resolve(), 50);\r\n              });\r\n              await promise;\r\n              var selectedName = nameArr[i];\r\n              var nameByte = Array.from(iconv.encode(selectedName, \"utf8\"));\r\n              var length = nameByte.length;\r\n              var senLength = length + 2;\r\n              var createCMD = [];\r\n              var sum = 0;\r\n              createCMD[0] = 0xff;\r\n              createCMD[1] = 0xff;\r\n              createCMD[2] = senLength;\r\n              createCMD[3] = 0x07; //删除\r\n              sum = senLength + 0x07;\r\n              for (let j = 0; j < length; j++) {\r\n                createCMD.push(nameByte[j]);\r\n                sum = sum + nameByte[j];\r\n              }\r\n              sum = sum % 256;\r\n              createCMD.push(sum);\r\n              var dataut = new Uint8Array(createCMD);\r\n              const writer = this.port.writable.getWriter();\r\n              await writer.write(dataut);\r\n              const reader = await this.port.readable.getReader();\r\n              var dataValue = [];\r\n              var redResult = false;\r\n\r\n              let promise1 = new Promise((resolve, reject) => {\r\n                setTimeout(() => resolve(), 50);\r\n              });\r\n              await promise1;\r\n              createCMD[3] = 0x06; //创建指令\r\n              createCMD[createCMD.length - 1] =\r\n                createCMD[createCMD.length - 1] - 1;\r\n              dataut = new Uint8Array(createCMD);\r\n              await writer.write(dataut);\r\n              dataValue = [];\r\n              redResult = false;\r\n\r\n              let promise2 = new Promise((resolve, reject) => {\r\n                setTimeout(() => resolve(), 50);\r\n              });\r\n              await promise2;\r\n\r\n              //上传数据\r\n              for (let j = 0; j < currentData[i].length; j++) {\r\n                let promises = new Promise((resolve, reject) => {\r\n                  setTimeout(() => resolve(), 50);\r\n                });\r\n                await promises;\r\n                const dataSen = new Uint8Array(currentData[i][j]);\r\n                console.log(dataSen);\r\n                await writer.write(dataSen);\r\n                dataValue = [];\r\n                redResult = false;\r\n              }\r\n              await writer.releaseLock();\r\n              await reader.releaseLock();\r\n            }\r\n            console.log(\"上传完成\");\r\n          }\r\n        };\r\n      } catch (err) {}\r\n    },\r\n  },\r\n};\r\n</script>\r\n","import { render } from \"./Bumblebee.vue?vue&type=template&id=0f7909e2\"\nimport script from \"./Bumblebee.vue?vue&type=script&lang=js\"\nexport * from \"./Bumblebee.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <h3>钢索机器人通讯结构</h3>\r\n  <p>连接方式 ： HID(usb口的一种方式)</p>\r\n  <p>匹配VendorID ： 0x0483</p>\r\n  <p>匹配ProductID ： 0x5750</p>\r\n  <el-button type=\"primary\" v-on:click=\"requestSerialPort()\">连接</el-button>\r\n  <label\r\n    >连接成功后发送[0xFF, 0x02, 0xF5, 0xF7]读取数据直到获取到[4F\r\n    4B](OK)后接收结束</label\r\n  >\r\n  <p></p>\r\n  <el-button type=\"primary\" v-on:click=\"closeMessage()\">关闭</el-button>\r\n  <label>关闭需要发送指令 [ 0xFF, 0x02, 0xF6, 0xF8] 然后断开HID</label>\r\n  <p></p>\r\n  <input type=\"file\" @change=\"actionDownload\" /> 下载功能\r\n</template>\r\n<script>\r\nimport { CreatePosDataDh } from \"/src/PosDataGh.js\";\r\nimport iconv from \"iconv-lite\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      initData: [], //存放4个初始位置\r\n      isInitData: false, //是否接收完成\r\n      endpointNumber: 2, //这个是要通讯的口\r\n      isLink: false, //是否连接\r\n      hidDevice: [], //通讯用\r\n      dataArr: [],\r\n    };\r\n  },\r\n  methods: {\r\n    async requestSerialPort() {\r\n      //连接\r\n      try {\r\n        await navigator.hid\r\n          .requestDevice({ filters: [{ vendorId: 0x0483, productId: 0x5750 }] }) //条件筛选\r\n          .then(async (device) => {\r\n            await device[0].open(); //打开\r\n            this.hidDevice = device[0];\r\n            device[0].addEventListener(\"inputreport\", this.receivingProcess);\r\n            this.initData = [];\r\n            this.isInitData = false;\r\n            var data = new Uint8Array([0xff, 0x02, 0xf5, 0xf7]); //深坑那个0 在这里是通道的id\r\n            await device[0].sendReport(0, data);\r\n          })\r\n          .catch((error) => {\r\n            console.error(error);\r\n          });\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    },\r\n    async closeMessage() {\r\n      //退出pc编译器\r\n      if (this.isLink == true) {\r\n        var data = new Uint8Array([0xff, 0x02, 0xf6, 0xf8]);\r\n        await this.hidDevice.sendReport(0, data);\r\n      }\r\n      //this.hidDevice.close();\r\n    },\r\n    async actionDownload(\r\n      event //动作下载\r\n    ) {\r\n      var file = event.target.files[0];\r\n      var reader = new FileReader();\r\n      reader.readAsText(file, \"UTF-8\");\r\n      reader.onload = async (evt) => {\r\n        const fileString = evt.target.result;\r\n        const count = fileString.trim().split(\"\\n\").length;\r\n        this.dataArr = [];\r\n        for (let index = 0; index < count; index++) {\r\n          const fileline = fileString.split(\"\\r\\n\")[index].split(\",\")[0];\r\n          const filelineNumber = fileline\r\n            .split(/\\s+/)\r\n            .map((match) =>\r\n              isNaN(match) ? match : match == \"\" ? \" \" : Number(match)\r\n            );\r\n          this.dataArr.push(filelineNumber);\r\n        }\r\n        // if(this.isLink == true)\r\n        {\r\n          //该处动作多了一个龙型人型判断\r\n          var nameArr = [];\r\n          var dataAction = [];\r\n          var dataArr = this.dataArr;\r\n          var len = dataArr.length;\r\n          for (let i = 0; i < len; i++) {\r\n            var _is_Action = false;\r\n            if (dataArr[i][0] == \" \") {\r\n              _is_Action = true;\r\n            }\r\n            if (\r\n              dataArr[i][0] == 253 &&\r\n              dataArr[i][1] == 253 &&\r\n              dataArr[i][2] == 254 &&\r\n              dataArr[i][3] != \" \"\r\n            ) {\r\n              //名称\r\n              nameArr.push(dataArr[i][3]);\r\n            }\r\n            if (_is_Action == true) {\r\n              dataAction.push(dataArr[i]);\r\n            }\r\n          }\r\n\r\n          var last_loop_byte = 0;\r\n          len = dataAction.length;\r\n          var posDataArr = [];\r\n          for (let i = 0; i < len; i++) {\r\n            var _n1 = dataAction[i][5];\r\n            var _n2 = dataAction[i][6];\r\n            var _n3 = dataAction[i][7];\r\n            var _n4 = dataAction[i][8];\r\n            var _n5 = dataAction[i][9];\r\n            var _n6 = dataAction[i][10];\r\n            for (let j = 0; j < 8; j++) {\r\n              let _Zero = _n1 & Math.pow(2, 7 - j);\r\n              if (_Zero != 0) {\r\n                dataAction[i][j + 11] *= -1;\r\n              }\r\n            }\r\n            for (let j = 0; j < 8; j++) {\r\n              let _Zero = _n2 & Math.pow(2, 7 - j);\r\n              if (_Zero != 0) {\r\n                dataAction[i][j + 19] *= -1;\r\n              }\r\n            }\r\n            for (let j = 0; j < 8; j++) {\r\n              let _Zero = _n3 & Math.pow(2, 7 - j);\r\n              if (_Zero != 0) {\r\n                dataAction[i][j + 27] *= -1;\r\n              }\r\n            }\r\n            for (let j = 0; j < 8; j++) {\r\n              let _Zero = _n4 & Math.pow(2, 7 - j);\r\n              if (_Zero != 0) {\r\n                dataAction[i][j + 35] *= -1;\r\n              }\r\n            }\r\n            for (let j = 0; j < 8; j++) {\r\n              let _Zero = _n5 & Math.pow(2, 7 - j);\r\n              if (_Zero != 0) {\r\n                dataAction[i][j + 43] *= -1;\r\n              }\r\n            }\r\n            for (let j = 0; j < 8; j++) {\r\n              let _Zero = _n6 & Math.pow(2, 7 - j);\r\n              if (_Zero != 0) {\r\n                dataAction[i][j + 51] *= -1;\r\n              }\r\n            }\r\n            var Loop_Time = 0;\r\n            var Is_Loop_Start = false;\r\n            var Is_Loop_End = false;\r\n            //用于判断是不是循环\r\n            if (dataAction[i][4] != 0 && dataAction[i][4] > 128) {\r\n              Loop_Time = dataAction[i][4] - 128;\r\n            } else if (dataAction[i][4] != 0 && dataAction[i][4] < 128) {\r\n              Loop_Time = dataAction[i][4];\r\n              Is_Loop_Start = false;\r\n              Is_Loop_End = true;\r\n            } else if (dataAction[i][4] == 0) {\r\n              Is_Loop_Start = false;\r\n              Is_Loop_End = false;\r\n            }\r\n            var Pos = [];\r\n            var number = dataAction[i][3];\r\n            for (let j = 0; j < 48; j++) {\r\n              Pos[j] = dataAction[i][j + 11];\r\n            }\r\n            var Speed = dataAction[i][59]; //速度\r\n            var Delay = dataAction[i][60]; //延迟\r\n            var Music_State = 0;\r\n            var Music_Number = -1;\r\n            var Music_Chosen = -1;\r\n            var Is_Cur_Form = 0;\r\n            //这里钢索与其他的不同之处//数据解析 前后都有空格\r\n            //  console.log(dataAction[i].length);\r\n            //  console.log(dataAction[i]);\r\n            var dActionLen = dataAction[i].length - 2; //去掉前后空格\r\n            if (dActionLen == 63) {\r\n              if (\r\n                dataAction[i][61] != 251 &&\r\n                dataAction[i][62] != 251 &&\r\n                dataAction[i][61] != 252 &&\r\n                dataAction[i][62] != 252\r\n              ) {\r\n                Music_Chosen = dataAction[i][61] * 256 + dataAction[i][62];\r\n                Music_State = 2;\r\n              } else if (dataAction[i][61] == 251 && dataAction[i][62] == 251) {\r\n                Music_State = 4;\r\n              } else if (dataAction[i][61] == 252 && dataAction[i][62] == 252) {\r\n                Music_State = 3;\r\n              }\r\n              Music_Number = Music_Chosen;\r\n            } else if (dActionLen == 61) {\r\n              Music_Chosen = 0;\r\n              Music_State = 2;\r\n            }\r\n            // console.log(dataAction[i]);\r\n            // console.log(dataAction[i][dataAction.length-2]);\r\n            Is_Cur_Form = dataAction[i][dataAction[i].length - 2];\r\n            Music_Number = Music_Chosen;\r\n            if (dataAction[i][4] != 0) {\r\n              if (last_loop_byte == 0) {\r\n                Is_Loop_Start = true;\r\n              } else {\r\n                Is_Loop_Start = false;\r\n              }\r\n              if (dataAction[i][4] < 128) {\r\n                Is_Loop_End = true;\r\n                Loop_Time = dataAction[i][4];\r\n              } else {\r\n                Is_Loop_End = false;\r\n                Loop_Time = dataAction[i][4] - 128;\r\n              }\r\n            }\r\n            if (dataAction[i][4] > 128) {\r\n              last_loop_byte = dataAction[i][4];\r\n            } else {\r\n              last_loop_byte = 0;\r\n            }\r\n\r\n            var posDataDhInit = {\r\n              number: number,\r\n              Name: 1,\r\n              Pos: Pos,\r\n              Speed: Speed,\r\n              Delay: Delay,\r\n              Loop_Time: Loop_Time,\r\n              Is_Loop_Start: Is_Loop_Start,\r\n              Is_Loop_End: Is_Loop_End,\r\n              Music_State: Music_State,\r\n              Music_Number: Music_Number,\r\n              Is_Cur_Form: Is_Cur_Form,\r\n            };\r\n\r\n            posDataArr.push(CreatePosDataDh(posDataDhInit));\r\n          }\r\n          //console.log(posDataArr);\r\n          len = posDataArr.length;\r\n          let currentNumber = 0;\r\n          var Loop_Time = -1;\r\n          var Is_In_Loop = false;\r\n          var currentData = [[]];\r\n          var flagNumber = posDataArr[0].number;\r\n          currentData[0] = [];\r\n          for (let i = 0; i < len; i++) {\r\n            if (flagNumber != posDataArr[i].number) {\r\n              flagNumber = posDataArr[i].number;\r\n              currentNumber++;\r\n              currentData[currentNumber] = [];\r\n            }\r\n            var currentPos = [];\r\n            currentPos.push(0xff);\r\n            currentPos.push(0x3d);\r\n            currentPos.push(0x02);\r\n            if (!Is_In_Loop) {\r\n              currentPos[3] = 0;\r\n            }\r\n            if (\r\n              Is_In_Loop &&\r\n              !posDataArr[i].Is_Loop_Start &&\r\n              !posDataArr[i].Is_Loop_End\r\n            ) {\r\n              currentPos[3] = Loop_Time + 128;\r\n            }\r\n            if (posDataArr[i].Is_Loop_End) {\r\n              Is_In_Loop = false;\r\n              currentPos[3] = Loop_Time;\r\n              Loop_Time = 0;\r\n            }\r\n            if (posDataArr[i].Is_Loop_Start) {\r\n              Is_In_Loop = true;\r\n              Loop_Time = posDataArr[i].Loop_Time;\r\n              currentPos[3] = Loop_Time + 128;\r\n            }\r\n\r\n            var _int_temp1 = 0;\r\n            var _int_temp2 = 0;\r\n            var _int_temp3 = 0;\r\n            var _int_temp4 = 0;\r\n            var _int_temp5 = 0;\r\n            var _int_temp6 = 0;\r\n            for (let k = 0; k < 48; k++) {\r\n              if (k < 8) {\r\n                if (posDataArr[i].Pos[k] < 0) {\r\n                  _int_temp1 += parseInt(Math.pow(2, 7 - k));\r\n                  posDataArr[i].Pos[k] = posDataArr[i].Pos[k] * -1;\r\n                }\r\n              }\r\n\r\n              if (k >= 8 && k < 16) {\r\n                if (posDataArr[i].Pos[k] < 0) {\r\n                  _int_temp2 += parseInt(Math.pow(2, 15 - k));\r\n                  posDataArr[i].Pos[k] = posDataArr[i].Pos[k] * -1;\r\n                }\r\n              }\r\n\r\n              if (k >= 16 && k < 24) {\r\n                if (posDataArr[i].Pos[k] < 0) {\r\n                  _int_temp3 += parseInt(Math.pow(2, 23 - k));\r\n                  posDataArr[i].Pos[k] = posDataArr[i].Pos[k] * -1;\r\n                }\r\n              }\r\n\r\n              if (k >= 24 && k < 32) {\r\n                if (posDataArr[i].Pos[k] < 0) {\r\n                  _int_temp4 += parseInt(Math.pow(2, 31 - k));\r\n                  posDataArr[i].Pos[k] = posDataArr[i].Pos[k] * -1;\r\n                }\r\n              }\r\n              if (k >= 32 && k < 40) {\r\n                if (posDataArr[i].Pos[k] < 0) {\r\n                  _int_temp5 += parseInt(Math.pow(2, 39 - k));\r\n                  posDataArr[i].Pos[k] = posDataArr[i].Pos[k] * -1;\r\n                }\r\n              }\r\n\r\n              if (k >= 40 && k < 48) {\r\n                if (posDataArr[i].Pos[k] < 0) {\r\n                  _int_temp6 += parseInt(Math.pow(2, 47 - k));\r\n                  posDataArr[i].Pos[k] = posDataArr[i].Pos[k] * -1;\r\n                }\r\n              }\r\n            }\r\n\r\n            currentPos[4] = _int_temp1;\r\n            currentPos[5] = _int_temp2;\r\n            currentPos[6] = _int_temp3;\r\n            currentPos[7] = _int_temp4;\r\n            currentPos[8] = _int_temp5;\r\n            currentPos[9] = _int_temp6;\r\n            for (let k = 0; k < 48; k++) {\r\n              currentPos[k + 11] = posDataArr[i].Pos[k];\r\n            }\r\n            currentPos[58] = posDataArr[i].Speed;\r\n            currentPos[59] = posDataArr[i].Delay;\r\n            switch (posDataArr[i].Music_State) {\r\n              case 1:\r\n                currentPos[60] = parseInt(posDataArr[i].Music_Number / 256);\r\n                currentPos[61] = parseInt(posDataArr[i].Music_Number % 256);\r\n                break;\r\n              case 2:\r\n                currentPos[60] = parseInt(posDataArr[i].Music_Number / 256);\r\n                currentPos[61] = parseInt(posDataArr[i].Music_Number % 256);\r\n                break;\r\n              case 3:\r\n                currentPos[60] = 252;\r\n                currentPos[61] = 252;\r\n                break;\r\n              case 4:\r\n                currentPos[60] = 251;\r\n                currentPos[61] = 251;\r\n                break;\r\n            }\r\n            currentPos[62] = posDataArr[i].Is_Cur_Form;\r\n            var sum = 0;\r\n            var currentLen = currentPos.length;\r\n            for (let k = 2; k < currentLen; k++) {\r\n              sum += currentPos[k];\r\n            }\r\n            sum = sum % 256;\r\n            currentPos[63] = sum;\r\n            currentData[currentNumber].push(currentPos);\r\n          }\r\n          len = nameArr.length;\r\n          for (let i = 0; i < len; i++) {\r\n            let promise = new Promise((resolve, reject) => {\r\n              setTimeout(() => resolve(), 50);\r\n            });\r\n            await promise;\r\n            var selectedName = nameArr[i];\r\n            var typeName = selectedName.substring(0, 3);\r\n            var actionName = selectedName.substring(3);\r\n            if (typeName == \"人型:\") {\r\n              typeName = \"RobotAction/\";\r\n            } else if (typeName == \"龙型:\") {\r\n              typeName = \"Action/\";\r\n            }\r\n            actionName = typeName + actionName;\r\n            console.log(actionName);\r\n            var nameByte = Array.from(iconv.encode(actionName, \"utf8\"));\r\n            var length = nameByte.length;\r\n            var senlength = length + 2;\r\n            //删除\r\n            var createCMD = [];\r\n\r\n            createCMD[0] = 0xff;\r\n            createCMD[1] = senlength;\r\n            createCMD[2] = 0x15;\r\n            var sum = senlength + 0x15;\r\n            for (let j = 0; j < length; j++) {\r\n              createCMD.push(nameByte[j]);\r\n              sum = sum + nameByte[j];\r\n            }\r\n            sum = sum % 256;\r\n            createCMD.push(sum);\r\n            var dataUt = new Uint8Array(createCMD);\r\n            await this.hidDevice.sendReport(0, dataUt);\r\n            console.log(dataUt);\r\n            //这里需要延迟，钢索的是有返回消息的，但是根据流程，可以不处理\r\n            let promise1 = new Promise((resolve, reject) => {\r\n              setTimeout(() => resolve(), 50);\r\n            });\r\n            await promise1;\r\n            //这里得做测试\r\n            // //创建\r\n            // createCMD[2] = 0x14; //创建指令\r\n            // createCMD[createCMD.length - 1] =\r\n            //   createCMD[createCMD.length - 1] - 1;\r\n            // dataUt = new Uint8Array(createCMD);\r\n            // await this.hidDevice.sendReport(0, dataUt);\r\n            // let promise2 = new Promise((resolve, reject) => {\r\n            //   setTimeout(() => resolve(), 50);\r\n            // });\r\n            // await promise2;\r\n            // //发送数据\r\n            // for (let j = 0; j < currentData[i].length; j++) {\r\n            //   let promises = new Promise((resolve, reject) => {\r\n            //     setTimeout(() => resolve(), 50);\r\n            //   });\r\n            //   await promises;\r\n            //   var dataSen = new Uint8Array(currentData[i][j]);\r\n            //   await this.hidDevice.sendReport(0, dataSen);\r\n            // }\r\n          }\r\n        }\r\n      };\r\n    },\r\n    async receivingProcess(\r\n      event //接收消息线程池\r\n    ) {\r\n      try {\r\n        const { data } = event;\r\n        const dataU8 = new Uint8Array(data.buffer);\r\n        console.log(dataU8);\r\n        var len = dataU8.length;\r\n        for (let i = 0; i < len; i++) {\r\n          if (dataU8[i] == 0xff && dataU8[i + 1] == 0xff) {\r\n            //获取指令，长度，计算sum和\r\n            var dataLen = dataU8[i + 2]; //长度\r\n            var order = dataU8[i + 3]; //指令\r\n            if (dataLen == 0x32 && order == 0xf5) {\r\n              // 连接pc编译器\r\n              var dataAction = [];\r\n              for (let j = 0; j < 48; j++) {\r\n                dataAction[j] = dataU8[i + j + 4];\r\n              }\r\n              this.initData.push(dataAction);\r\n            } else if (\r\n              dataLen == 0x04 &&\r\n              order == 0xf5 &&\r\n              dataU8[i + 4] == 0x4f &&\r\n              dataU8[i + 5] == 0x4b\r\n            ) {\r\n              //连接pc编译器发送成功后的处理\r\n              this.isLink = true;\r\n              this.isInitData = true;\r\n              console.log(\"isInitData = \" + this.isInitData);\r\n            } else if (\r\n              dataLen == 0x04 &&\r\n              order == 0xf6 &&\r\n              dataU8[i + 4] == 0x4f &&\r\n              dataU8[i + 5] == 0x4b\r\n            ) {\r\n              //断开机器人\r\n              this.isLink = false;\r\n              this.hidDevice.close();\r\n            }\r\n          }\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n","//钢索特制PosData\r\nexport default class PosDataGh{\r\n    constructor({number,Name,Pos,Speed,Delay,Loop_Time,Is_Loop_Start,Is_Loop_End,Music_State,Music_Number,Is_Cur_Form})\r\n    {\r\n        this.number = number,//点位编号，对应的是那个动作下的点\r\n        this.Name = Name,//无作用\r\n        this.Pos = Pos,//点位信息的集合\r\n        this.Speed = Speed,//速度\r\n        this.Delay = Delay,//延迟\r\n        this.Loop_Time = Loop_Time,//循环次数\r\n        this.Is_Loop_Start = Is_Loop_Start,//是否是循环的开始\r\n        this.Is_Loop_End = Is_Loop_End,//是否是循环的结束\r\n        this.Music_State=Music_State,//0代表未选择，1代表指导音乐，2代表自定义音乐，3代表继续，4代表停止\r\n        this.Music_Number= Music_Number,//音乐的文件夹以及选择的那个音乐 那个文件夹是这个数/256 那个文件是这个数%256\r\n        this.Is_Cur_Form = Is_Cur_Form//当前动作帧的动作类型0表示人 1表示龙\r\n    }\r\n}\r\n\r\n\r\nexport function CreatePosDataDh(posDataDhInit)\r\n{\r\n    return new PosDataGh({\r\n        number : posDataDhInit.number,\r\n        Name : posDataDhInit.Name,\r\n        Pos : posDataDhInit.Pos,\r\n        Speed : posDataDhInit.Speed,\r\n        Delay : posDataDhInit.Delay,\r\n        Loop_Time:posDataDhInit.Loop_Time,\r\n        Is_Loop_Start : posDataDhInit.Is_Loop_Start,\r\n        Is_Loop_End : posDataDhInit.Is_Loop_End,\r\n        Music_State:posDataDhInit.Music_State,\r\n        Music_Number:posDataDhInit.Music_Number,\r\n        Is_Cur_Form:posDataDhInit.Is_Cur_Form\r\n\r\n    })\r\n}\r\n","import { render } from \"./SteelCable.vue?vue&type=template&id=82d93ef4\"\nimport script from \"./SteelCable.vue?vue&type=script&lang=js\"\nexport * from \"./SteelCable.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n  <el-button @click=\"connectToDevice\">连接蓝牙设备</el-button>\r\n  <el-button type=\"primary\" @click=\"getUUID\">获取UUID</el-button>\r\n  <el-button type=\"success\" @click=\"sendDataToDevice\">发送数据</el-button>\r\n</template>\r\n\r\n<script setup name=\"bluetooth-test\">\r\nimport { ref, reactive } from \"vue\";\r\n\r\nlet device;\r\nlet server;\r\nasync function sendDataToDevice(device, serviceUUID, characteristicUUID, data) {\r\n  try {\r\n    const characteristic = await service.getCharacteristic(\"0xffc1\");\r\n    console.log(characteristic);\r\n    // 写入数据\r\n    await characteristic.writeValue(data);\r\n\r\n    console.log(\"数据发送成功\");\r\n  } catch (error) {\r\n    console.error(\"发送数据出错:\", error);\r\n  }\r\n}\r\n\r\nasync function connectToDevice() {\r\n  try {\r\n    // 请求蓝牙设备权限\r\n    const options = {\r\n      //   acceptAllDevices: true,\r\n      filters: [\r\n        {\r\n          namePrefix: \"BUZZ\",\r\n        },\r\n      ],\r\n      optionalServices: [0xffc0],\r\n    };\r\n    // 连接蓝牙设备\r\n    device = await navigator.bluetooth.requestDevice(options);\r\n    server = await device.gatt.connect();\r\n    await new Promise((resolve) => setTimeout(resolve, 1000)); // 延迟1秒钟\r\n\r\n    // 获取蓝牙特征\r\n    const services = await server.getPrimaryServices(0xffc0);\r\n    console.log(services);\r\n\r\n    const characteristic = await services[0].getCharacteristic(0xffc1);\r\n    console.log(characteristic);\r\n\r\n    // 订阅数据\r\n    characteristic.startNotifications();\r\n    characteristic.addEventListener(\"characteristicvaluechanged\", (e) => {\r\n      console.log(e.target.value);\r\n    });\r\n    // 写入数据\r\n    await characteristic.writeValue(\r\n      //   new Uint8Array([85, 170, 0, 5, 19, 242, 144, 156, 53])\r\n      new Uint8Array([0x55, 0xaa, 0x00, 0x05, 0x13, 0xe7, 0x5f, 0x5d, 0xba])\r\n    );\r\n  } catch (error) {\r\n    console.error(\"连接设备出错:\", error);\r\n  }\r\n}\r\nasync function getUUID() {\r\n  console.log(server);\r\n\r\n  const services = await server.getPrimaryServices(\"battery_service\");\r\n  console.log(services);\r\n\r\n  /*  for (const service of services) {\r\n    console.log(\"Service UUID:\", service.uuid);\r\n\r\n    const characteristics = await service.getCharacteristics();\r\n    for (const characteristic of characteristics) {\r\n      console.log(\"Characteristic UUID:\", characteristic.uuid);\r\n    }\r\n  } */\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>\r\n","import script from \"./Bluetooth.vue?vue&type=script&setup=true&name=bluetooth-test&lang=js\"\nexport * from \"./Bluetooth.vue?vue&type=script&setup=true&name=bluetooth-test&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import Vue from \"vue\";\r\nimport { createRouter, createWebHashHistory } from \"vue-router\";\r\n\r\nimport HomePage from \"@/components/Home.vue\";\r\nimport Convoy_Seven from \"@/components/Convoy_Seven.vue\";\r\nimport Bumblebee from \"@/components/Bumblebee.vue\";\r\nimport SteelCable from \"@/components/SteelCable.vue\";\r\nimport Bluetooth from \"@/components/Bluetooth.vue\";\r\n\r\nconst router = createRouter({\r\n  mode: \"hash\",\r\n  history: createWebHashHistory(),\r\n  routes: [\r\n    {\r\n      path: \"/\",\r\n      name: \"HomePage\",\r\n      component: HomePage,\r\n    },\r\n    {\r\n      path: \"/Convoy_Seven\",\r\n      name: \"Convoy_Seven\",\r\n      component: Convoy_Seven,\r\n    },\r\n    {\r\n      path: \"/Bumblebee\",\r\n      name: \"Bumblebee\",\r\n      component: Bumblebee,\r\n    },\r\n    {\r\n      path: \"/SteelCable\",\r\n      name: \"SteelCable\",\r\n      component: SteelCable,\r\n    },\r\n    {\r\n      path: \"/Bluetooth\",\r\n      name: \"Bluetooth\",\r\n      component: Bluetooth,\r\n    },\r\n  ],\r\n});\r\n\r\nexport default router;\r\n","<template>\n     <!-- <h3>机器人通讯方式以及数据结构</h3>\n  <button style=\"margin-left:30px\">变七</button>  \n  <button style=\"margin-left:30px\" v-on:click=\"GO_Convoy_Seven()\"> 大黄蜂</button>\n  <router-link to=\"/Convoy_Seven\">Go to About</router-link>\n  <div style=\"background-color: aqua;width: 100px; height: 100px;\" id=\"app\">\n    <router-view style=\"width 100px; height: 100px;\"/>\n  </div> -->\n  \n   <div id=\"app\">\n    <router-view/>\n  </div>\n \n</template>\n<!-- <script>\n  export default{\n    data(){\n\n      return{\n        msg:\"aaa\",\n         ports:[]\n      }\n    },\n    methods:{\n      async requestSerialPort(){\n        try{\n          //\n            const port = await navigator.serial.requestPort();\n            console.log(port);\n    \n        }\n        catch(err)\n        {\n           console.error(err);\n        }\n  \n      },\n      async getSerialPorts(){\n        try{\n  \n          this.ports = await navigator.serial.getPorts();\n          console.log(this.ports);\n       \n        }\n        catch(err){console.error(err);}\n      },\n      GO_Convoy_Seven(){\n         console.log(1);\n        this.$router.replace('/Convoy_Seven');\n      }\n    },\n    mounted(){\n      //this.requestSerialPort();\n      //this.getSerialPorts();\n    }\n    \n  }\n  </script> --> -->","import { render } from \"./App.vue?vue&type=template&id=799f8ffc\"\nconst script = {}\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport router from './router.js'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\n//  import{open,getPorts} from \"serialport\";\nimport App from './App.vue'\n\nconst app =  createApp(App)\napp.use(router)\napp.use(ElementPlus)\napp.mount('#app')\n\n\n\n\n//需要Web Serial API  调用串口\n\n// // 使用 open 函数打开串口连接\n// open({ path: \"COM1\", baudRate: 9600 })\n//   .then((port) => {\n//     console.log(\"串口连接已打开\");\n//     // 在这里进行串口通信操作\n//   })\n//   .catch((error) => {\n//     console.error(\"无法打开串口连接:\", error);\n//   });\n\n// // 使用 getPorts 函数获取串口设备列表\n// getPorts()\n//   .then((ports) => {\n//     console.log(\"串口设备列表:\", ports);\n//     // 在这里处理获取到的串口设备列表\n//   })\n//   .catch((error) => {\n//     console.error(\"无法获取串口设备列表:\", error);\n//   });","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkrobot_comm_model\"] = self[\"webpackChunkrobot_comm_model\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(4787); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_createVNode","_component_el_button","type","onClick","_cache","$event","$options","GO_Convoy_Seven","GO_Bumblebee","GO_SteelCable","data","msg","ports","methods","async","port","navigator","serial","requestPort","console","log","err","error","this","getPorts","$router","replace","i","length","splice","nameByte","Array","from","iconv","nameByte1","mounted","__exports__","render","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","requestSerialPort","_hoisted_7","_hoisted_8","closePose","_hoisted_9","_hoisted_10","timeSendingPosition","_hoisted_11","_component_el_input","$data","ArmInput","style","_hoisted_12","_hoisted_13","humanoidInitial","_hoisted_14","_hoisted_15","squatStart","_hoisted_16","_hoisted_17","onChange","args","actionDownload","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","getActionName","_component_el_select","selectedOption","_Fragment","_renderList","vOpentions","option","_createBlock","_component_el_option","key","label","value","_hoisted_26","_hoisted_27","getAction","_hoisted_28","PosData","constructor","number","Name","Pos","Speed","Delay","Loop_Time","Is_Loop_Start","Is_Loop_End","Music_State","Music_Number","CreatePosData","posDataInit","isLink","initData","dataArr","open","baudRate","parity","dataBits","stopBits","Uint8Array","writer","writable","getWriter","write","releaseLock","reader","readable","getReader","dataValue","done","read","len","order","flag","dataArray","j","parseInt","sendData","sum","dataUt","event","file","target","files","FileReader","readAsText","onload","fileString","evt","result","count","trim","split","index","fileline","filelineNumber","map","match","isNaN","Number","push","nameArr","dataAction","_is_Action","last_loop_byte","posDataArr","_n1","_n2","_n3","_n4","_n5","_n6","_Zero","Math","pow","Music_Chosen","posData","currentNumber","Is_In_Loop","currentData","flagNumber","currentPos","_int_temp1","_int_temp2","_int_temp3","_int_temp4","_int_temp5","_int_temp6","k","promise","Promise","resolve","reject","setTimeout","selectedName","typeName","substring","actionName","senLength","createCMD","redResult","promise1","promise2","promise3","promises","dataSen","sendLength","sendByte","slice","dataList","dataCount","dataInfo","strData","bufferSize","currentnumber","pos","dataut","closeMessage","PosDataGh","Is_Cur_Form","CreatePosDataDh","posDataDhInit","isInitData","endpointNumber","hidDevice","hid","requestDevice","filters","vendorId","productId","then","device","addEventListener","receivingProcess","sendReport","catch","dActionLen","currentLen","senlength","dataU8","buffer","dataLen","close","server","sendDataToDevice","serviceUUID","characteristicUUID","characteristic","service","getCharacteristic","writeValue","connectToDevice","options","namePrefix","optionalServices","bluetooth","gatt","connect","services","getPrimaryServices","startNotifications","e","getUUID","router","createRouter","mode","history","createWebHashHistory","routes","path","name","component","HomePage","Convoy_Seven","Bumblebee","SteelCable","Bluetooth","id","_component_router_view","script","app","createApp","App","use","ElementPlus","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","Object","keys","every","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","Function","window","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}